{"version":3,"sources":["states/teas.ts","App.tsx","Empty.tsx","states/layout.ts","utils/capitalize.ts","components/Selectors/Layout.tsx","components/Selectors/Filtering.tsx","components/Selectors/Personal.tsx","components/Selectors/Sorting.tsx","components/Toggle.tsx","states/whiteBalanced.ts","components/Selectors/Subject.tsx","components/Divider.tsx","components/Heading.tsx","states/nav.ts","components/Nav.tsx","components/Detail/Description.tsx","components/Detail/LinkButton.tsx","components/Detail/Form.tsx","components/Detail/Table.tsx","components/Detail/Lines.tsx","components/Detail/OwnedButton.tsx","components/Detail/Detail.tsx","utils/formatNumber.ts","routes/DetailDrawer.tsx","utils/scrollTop.ts","components/Stats.tsx","components/TeaProduct/Card.tsx","routes/Cards.tsx","states/selectedSlug.ts","hooks/useKeyboardNavigation.tsx","components/TeaProduct/ListRow.tsx","routes/List.tsx","components/TeaProduct/Slice.tsx","routes/Slices.tsx","types/TeaProduct.ts","states/teaStyleFiltering.ts","states/sorting.ts","states/personalFilters.ts","utils/scale.ts","types/const.ts","components/Detail/PercentileCircle.tsx","utils/reportWebVitals.ts","index.tsx","components/TeaProduct/Image.tsx","states/owned.ts","utils/scrollTo.ts"],"names":["allTeasState","atom","key","default","teaProducts","teasState","selector","get","all","selectedFiltering","teaStyleFilteringState","selectedSorting","sortingState","personalFilter","personalFilterState","owned","ownedState","map","t","isOwned","slug","filter","filteringFunctions","sort","sortingFunctions","process","console","log","App","sorting","useRecoilValue","filtering","teas","personal","useSearchParams","params","location","useLocation","detail","useEffect","state","json","JSON","stringify","localStorage","setItem","window","scrollTo","pathname","scrollToId","useKeyboardNavigation","className","path","element","Main","index","to","id","length","Empty","layouts","capitalize","str","toUpperCase","slice","toLowerCase","Selector","layout","subject","useParams","newLocation","search","LayoutSelector","l","Button","useRecoilState","currentFiltering","set","disabled","onClick","FilteringSelector","$Buttons","Object","keys","PersonalSelector","personalFilters","value","Label","icon","getIcon","currentSorting","setSorting","SortingSelector","props","sortings","s","Toggle","label","classes","whiteBalancedState","WhiteBalance","isWhiteBalanced","setIsWhiteBalanced","currentSubject","newSubjectLocation","replace","SubjectSelector","Divider","Heading","children","top","behavior","navState","MixVertical","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","isNavOpen","setIsNavOpen","toggleNav","Nav","Description","description","lines","target","source","regex","RegExp","glowTitle","replaceWithGlowHtml","glowText","split","html","shift","join","dangerouslySetInnerHTML","__html","LinkButton","url","href","PriceTable","style","first","second","third","FormPricesTable","form","inStock","price","_name","name","mass","parseInt","tilde","startsWith","nan","Number","isNaN","getMassName","$price","toFixed","$ppg","textDecoration","color","TableHeading","headings","h","Line","percentile","PercentileCircle","LineTable","Lines","forms","teaStyle","percentiles","dpg","typeSize","OwnedButton","setOwned","newOwned","Detail","number","tea","year","quantity","size","IMAGE_SIZE","imageUrl","getImageUrl","images","wrapperTop","thumbnailUrl","fullName","Image","src","alt","Intl","NumberFormat","format","f","i","Drawer","DetailDrawer","allTeas","setParams","detailSlug","offset","elem","document","getElementById","scrollTop","find","Stat","total","showPercent","percent","style2","title","isSmall","isReallySmall","text","Math","round","Stats","styleGroups","groupBy","styles","entries","a","b","localeCompare","undefined","pGroups","p","padStart","pGroupEntries","ts","k","xs","border","getScaleColor","tenX","getScaleTextColor","Card","Cards","$Teas","selectedSlugState","getDirection","direction","findIndex","selectedSlug","setSelectedSlug","useHotkeys","getRandomStyle","rand","min","max","random","left","ListRow","useMemo","imageStyle","List","Slice","loading","Slices","defaultFilters","getDefaultFilters","useState","filteredSizes","setFilteredSizes","Filters","toggle","TeaSlices","cake","brick","mini","bamboo","unknown","isStyle","x","raw","ripe","white","black","oolong","heicha","includes","huigan","smokey","blend","yiwu","menghai","getName","nameAsc","maxDPG","scale","scaleIndex","floor","borderColor","displayed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","isLoaded","setIsLoaded","onLoad","stored","getItem","parse","delay","setTimeout","innerWidth","scrollIntoView","block"],"mappings":"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","file":"static/js/main.a53e5a29.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nimport teaProducts from \"teaProducts.json\";\nimport {\n  filteringFunctions,\n  teaStyleFilteringState,\n} from \"./teaStyleFiltering\";\nimport { sortingFunctions, sortingState } from \"./sorting\";\nimport { ownedState } from \"./owned\";\nimport { personalFilterState } from \"./personalFilters\";\n\nexport const allTeasState = atom({\n  key: \"allTeas\",\n  default: teaProducts as TeaProduct[],\n});\n\nexport const teasState = selector({\n  key: \"teas\",\n  get: ({ get }) => {\n    const all = get(allTeasState);\n    const selectedFiltering = get(teaStyleFilteringState);\n    const selectedSorting = get(sortingState);\n    const personalFilter = get(personalFilterState);\n    const owned = get(ownedState);\n\n    return all\n      .map((t) => {\n        const isOwned = owned[t.slug];\n        return {\n          ...t,\n          owned: isOwned,\n        };\n      })\n      .filter((t) => {\n        switch (personalFilter) {\n          case \"owned\": {\n            if (!t.owned) return false;\n            break;\n          }\n          case \"all\":\n          default: {\n            break;\n          }\n        }\n        const filter = filteringFunctions[selectedFiltering];\n        return filter(t);\n      })\n      .sort(sortingFunctions[selectedSorting]);\n  },\n});\n","import { Nav } from \"components/Nav\";\nimport { DetailDrawer } from \"routes/DetailDrawer\";\nimport { useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { sortingState } from \"states/sorting\";\nimport { teaStyleFilteringState } from \"states/teaStyleFiltering\";\n\nimport \"./App.scss\";\nimport { useKeyboardNavigation } from \"hooks/useKeyboardNavigation\";\nimport {\n  Routes,\n  Route,\n  Navigate,\n  useSearchParams,\n  Outlet,\n  useLocation,\n} from \"react-router-dom\";\nimport { Cards } from \"routes/Cards\";\nimport { List } from \"routes/List\";\nimport { Slices } from \"routes/Slices\";\nimport { teasState } from \"states/teas\";\nimport { scrollToId } from \"utils/scrollTo\";\nimport { Empty } from \"Empty\";\nimport { personalFilterState } from \"states/personalFilters\";\n\nprocess && console.log(`msg: ${process.env.REACT_APP_GIT_MSG || \"dev\"}`);\n\nfunction App() {\n  const sorting = useRecoilValue(sortingState);\n  const filtering = useRecoilValue(teaStyleFilteringState);\n  const teas = useRecoilValue(teasState);\n  const personal = useRecoilValue(personalFilterState);\n  const [params] = useSearchParams();\n  const location = useLocation();\n\n  const detail = params.get(\"detail\") || \"\";\n\n  useEffect(() => {\n    const state = {\n      sorting,\n      filtering,\n    };\n    const json = JSON.stringify(state);\n    localStorage.setItem(\"state\", json);\n  }, [sorting, filtering]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [sorting, filtering, personal, location.pathname]);\n\n  useEffect(() => {\n    if (detail) scrollToId(detail, 80);\n  }, [detail]);\n\n  useKeyboardNavigation(teas);\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route path=\"/\" element={<Main />}>\n          <Route path=\"cards/:subject\" element={<Cards />} />\n          <Route path=\"slices/:subject\" element={<Slices />} />\n          <Route path=\"list/:subject\" element={<List />} />\n          <Route index element={<Navigate to=\"/cards/wrapperTop\" />} />\n          <Route path=\"*\" element={<Navigate to=\"cards/wrapperTop\" />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Main = () => {\n  const [params] = useSearchParams();\n  const detail = params.get(\"detail\") || \"\";\n  const teas = useRecoilValue(teasState);\n  return (\n    <>\n      <Nav />\n      <main id=\"main\" className={detail ? \"detail--open\" : \"\"}>\n        {teas.length ? <Outlet /> : <Empty />}\n      </main>\n      <DetailDrawer />\n    </>\n  );\n};\n","import \"./Empty.scss\";\n\nexport const Empty = () => <div className=\"Empty\"></div>;\n","import { atom } from \"recoil\";\n\nexport type Layout = \"cards\" | \"list\" | \"slices\";\n\nexport const layouts: Layout[] = [\"cards\", \"slices\", \"list\"];\n\nexport const layoutState = atom({\n  key: \"layout\",\n  default: \"cards\" as Layout,\n});\n","export const capitalize = (str: string) => str[0].toUpperCase() + str.slice(1).toLowerCase();","import { NavLink, useLocation, useParams } from \"react-router-dom\";\nimport { Layout, layouts } from \"states/layout\";\nimport { capitalize } from \"utils/capitalize\";\n\nexport const Selector = ({ layout }: { layout: Layout }) => {\n  const { subject } = useParams();\n  const location = useLocation();\n\n  const newLocation = {\n    pathname: `${layout}/${subject}`,\n    search: location.search,\n  };\n  return (\n    <NavLink className=\"button radio button--layout\" to={newLocation}>\n      <span className=\"label\">{capitalize(layout)}</span>\n    </NavLink>\n  );\n};\n\nexport const LayoutSelector = () => (\n  <>\n    {layouts.map((l) => (\n      <Selector key={l} layout={l} />\n    ))}\n  </>\n);\n","import { useRecoilState } from \"recoil\";\nimport {\n  filteringFunctions,\n  TeaStyleFiltering,\n  teaStyleFilteringState,\n} from \"states/teaStyleFiltering\";\n\nexport const Button = ({ filtering }: { filtering: TeaStyleFiltering }) => {\n  const [currentFiltering, set] = useRecoilState(teaStyleFilteringState);\n  return (\n    <button\n      className=\"button radio button--filter\"\n      disabled={filtering === currentFiltering}\n      onClick={() => set(filtering)}\n    >\n      {filtering}\n    </button>\n  );\n};\n\nexport const FilteringSelector = () => {\n  const $Buttons = Object.keys(filteringFunctions).map((key) => (\n    <Button filtering={key as TeaStyleFiltering} key={key} />\n  ));\n  return <>{$Buttons}</>;\n};\n","import { useRecoilState } from \"recoil\";\nimport {\n  personalFilterState,\n  PersonalFilter,\n  personalFilters,\n} from \"states/personalFilters\";\nimport './Personal.scss';\n\nexport const Button = ({ filtering }: { filtering: PersonalFilter }) => {\n  const [currentFiltering, set] = useRecoilState(personalFilterState);\n  return (\n    <button\n      className=\"button radio button--filter button--personal\"\n      disabled={filtering === currentFiltering}\n      onClick={() => set(filtering)}\n    >\n      {filtering}\n    </button>\n  );\n};\n\nexport const PersonalSelector = () => {\n  const $Buttons = personalFilters.map((value) => (\n    <Button filtering={value as PersonalFilter} key={value} />\n  ));\n  return <>{$Buttons}</>;\n};\n","import { useRecoilState } from \"recoil\";\nimport { Sorting, sortings, sortingState } from \"states/sorting\";\n\nconst getIcon = (value: string) => {\n  switch (value[0]) {\n    case \"+\": {\n      // return '⬈';\n      return \"+\";\n    }\n    case \"-\": {\n      // return '⬊';\n      return \"-\";\n    }\n    default: {\n      return \"?\";\n    }\n  }\n};\n\nconst Label = ({ value }: any) => {\n  const icon = getIcon(value);\n  return (\n    <span className=\"label\">\n      <span className=\"text\">{value.slice(1)}</span>\n      &nbsp;\n      <span className=\"icon--plain\">{icon}</span>\n    </span>\n  );\n};\n\nexport const Button = ({ sorting }: { sorting: Sorting }) => {\n  const [currentSorting, setSorting] = useRecoilState(sortingState);\n  return (\n    <button\n      className=\"button radio button--sort\"\n      disabled={sorting === currentSorting}\n      onClick={() => setSorting(sorting)}\n    >\n      <Label value={sorting} />\n    </button>\n  );\n};\n\nexport const SortingSelector = (props: any) => {\n  const $Buttons = sortings.map((s) => <Button sorting={s} key={s} />);\n  return <>{$Buttons}</>;\n};\n","import { Dispatch, SetStateAction } from \"react\";\n\ninterface ToggleProps {\n  value: boolean;\n  set: Dispatch<SetStateAction<boolean>>;\n  label: string;\n  classes?: string;\n}\n\nexport const Toggle = ({ value, label, set, classes = '' }: ToggleProps) => (\n  <button\n    className={`button toggle ${value ? 'checked' : ''} ${classes}`}\n    onClick={() => set(!value)}\n  >\n    {label}\n  </button>\n);\n","import { atom } from 'recoil';\n\nexport const whiteBalancedState = atom({\n  key: 'whiteBalanced',\n  default: true,\n});\n","import { NavLink, useLocation, useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { Toggle } from \"components/Toggle\";\nimport { whiteBalancedState } from \"states/whiteBalanced\";\nimport { ImageSubject } from \"types/TeaProduct\";\nimport { capitalize } from \"utils/capitalize\";\nimport \"./Subject.scss\";\n\nconst WhiteBalance = () => {\n  const [isWhiteBalanced, setIsWhiteBalanced] =\n    useRecoilState(whiteBalancedState);\n  return (\n    <Toggle\n      value={isWhiteBalanced}\n      set={setIsWhiteBalanced}\n      label=\"wb\"\n      classes=\"WhiteBalance\"\n    />\n  );\n};\n\nconst label = (subject: ImageSubject) => capitalize(subject[0]);\n\nconst Button = ({ subject }: { subject: ImageSubject }) => {\n  const { subject: currentSubject } = useParams();\n  const location = useLocation();\n\n  const newSubjectLocation = currentSubject\n    ? {\n        pathname: location.pathname.replace(currentSubject, subject),\n        search: location.search,\n      }\n    : \"/\";\n  return (\n    <NavLink\n      className={`button radio button--subject `}\n      to={newSubjectLocation}\n      // disabled={currentSubject === subject}\n    >\n      {label(subject)}\n    </NavLink>\n  );\n};\n\nexport const SubjectSelector = () => {\n  const { subject: currentSubject } = useParams();\n  return (\n    <nav className={`subject-selector global`}>\n      <Button subject=\"wrapperTop\" />\n      <Button subject=\"teaTop\" />\n      <div className={`subject--white-balanced ${currentSubject}`}>\n        <WhiteBalance />\n        <Button subject=\"soup\" />\n      </div>\n    </nav>\n  );\n};\n","export const Divider = () => (\n  <>\n    <br />\n    <br />\n  </>\n);\n","export const Heading = ({ children }: any) => (\n  <h1 className=\"heading\" onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>{children}</h1>\n);\n","import { atom } from \"recoil\";\n\nexport const navState = atom({\n  key: \"nav\",\n  default: false,\n});\n","import { LayoutSelector } from \"components/Selectors/Layout\";\nimport { FilteringSelector } from \"components/Selectors/Filtering\";\nimport { PersonalSelector } from \"components/Selectors/Personal\";\nimport { SortingSelector } from \"components/Selectors/Sorting\";\nimport { SubjectSelector } from \"components/Selectors/Subject\";\nimport { Divider } from \"components/Divider\";\nimport { Heading } from \"components/Heading\";\nimport { navState } from \"states/nav\";\nimport { useRecoilState } from \"recoil\";\nimport \"./Nav.scss\";\n\nconst MixVertical = () => (\n  <svg\n    width=\"15\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M5 1.5C5 1.22386 4.77614 1 4.5 1C4.22386 1 4 1.22386 4 1.5L4 7C4 7.01671 4.00082 7.03323 4.00242 7.04952C2.86009 7.28022 2 8.28967 2 9.5C2 10.7103 2.86009 11.7198 4.00242 11.9505C4.00082 11.9668 4 11.9833 4 12V13.5C4 13.7761 4.22386 14 4.5 14C4.77614 14 5 13.7761 5 13.5V12C5 11.9833 4.99918 11.9668 4.99758 11.9505C6.1399 11.7198 7 10.7103 7 9.5C7 8.28967 6.1399 7.28022 4.99758 7.04952C4.99918 7.03323 5 7.01671 5 7L5 1.5ZM11 1.5C11 1.22386 10.7761 1 10.5 1C10.2239 1 10 1.22386 10 1.5V3C10 3.01671 10.0008 3.03323 10.0024 3.04952C8.8601 3.28022 8 4.28967 8 5.5C8 6.71033 8.8601 7.71978 10.0024 7.95048C10.0008 7.96677 10 7.98329 10 8V13.5C10 13.7761 10.2239 14 10.5 14C10.7761 14 11 13.7761 11 13.5V8C11 7.98329 10.9992 7.96677 10.9976 7.95048C12.1399 7.71978 13 6.71033 13 5.5C13 4.28967 12.1399 3.28022 10.9976 3.04952C10.9992 3.03323 11 3.01671 11 3V1.5ZM4.5 8C3.67157 8 3 8.67157 3 9.5C3 10.3284 3.67157 11 4.5 11C5.32843 11 6 10.3284 6 9.5C6 8.67157 5.32843 8 4.5 8ZM9 5.5C9 4.67157 9.67157 4 10.5 4C11.3284 4 12 4.67157 12 5.5C12 6.32843 11.3284 7 10.5 7C9.67157 7 9 6.32843 9 5.5Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    ></path>\n  </svg>\n);\n\nconst Button = () => {\n  const [isNavOpen, setIsNavOpen] = useRecoilState(navState);\n  const toggleNav = () => setIsNavOpen(!isNavOpen);\n\n  return (\n    <div\n      onClick={toggleNav}\n      className={`NavShadow ${isNavOpen ? \"open\" : \"closed\"}`}\n    >\n      <button onClick={toggleNav} className=\"controls--global_button\">\n        {/* <Playstation /> */}\n        <MixVertical />\n      </button>\n    </div>\n  );\n};\n\nexport const Nav = () => {\n  const [isNavOpen] = useRecoilState(navState);\n  return (\n    <>\n      <Button />\n      <aside className={`controls--global ${isNavOpen ? \"open\" : \"\"}`}>\n        <Heading>w2tv</Heading>\n        <SubjectSelector />\n        <LayoutSelector />\n        <Divider />\n        <SortingSelector />\n        <Divider />\n        <PersonalSelector />\n        <Divider />\n        <FilteringSelector />\n        <Divider />\n      </aside>\n    </>\n  );\n};\n","export function replaceWithGlowHtml(target: string, source: string) {\n  const regex = new RegExp(target, \"g\");\n  const glowTitle = `<span class=\"glow\">${target}</span>`;\n  const descriptionGlow = source.replace(regex, glowTitle);\n  return descriptionGlow;\n}\ntype Props = {\n  description: string;\n  glowText: string;\n};\n\nexport const Description = ({ description, glowText }: Props) => {\n  const descriptionGlow = replaceWithGlowHtml(glowText, description);\n  const lines = descriptionGlow.split(\".\");\n  const html = `\n<p>\n  ${lines.shift()}.\n</p>\n<p>\n  ${lines.join(\". \")}\n</p>\n  `;\n  return (\n    <div className=\"description\" dangerouslySetInnerHTML={{ __html: html }} />\n  );\n};\n","export const LinkButton = ({ url }: { url: string }) => {\n  return (\n    <a className=\"DetailButton Link\" href={url}>\n      <span className=\"value\">🔗</span>\n    </a>\n  );\n};\n","import * as TeaProduct from \"types/TeaProduct\";\nimport \"./Table.scss\";\nimport \"./Form.scss\";\n\nconst PriceTable = ({ style, first, second, third }: any) => (\n  <div style={style} className=\"Table table\">\n    <h2>{first}</h2>\n    <h3>{second}</h3>\n    <h4>{third}</h4>\n  </div>\n);\n\ntype Props = {\n  form: TeaProduct.Form;\n  style: string;\n  index: number;\n};\n\nexport const FormPricesTable = ({ form, style: teaStyle, index }: Props) => {\n  const { inStock, price } = form;\n\n  var { nan, mass, name } = getMassName(form);\n  const $price = \"$\" + price.toFixed(2);\n  const $ppg = nan ? \"$?\" : \"$\" + (price / mass).toFixed(2);\n\n  const style = {\n    textDecoration: inStock ? \"none\" : \"line-through\",\n    color: inStock ? \"inherit\" : \"var(--grey-medium)\",\n  };\n\n  return (\n    <div className=\"FormPricesTable\">\n      <PriceTable style={style} first={name} second={$price} third={$ppg} />\n    </div>\n  );\n};\n\nexport const FormPercentileTable = ({ form }: Props) => {\n  const { inStock, percentiles } = form;\n\n  const style = {\n    textDecoration: inStock ? \"none\" : \"line-through\",\n    color: inStock ? \"inherit\" : \"var(--grey-medium)\",\n  };\n  const all = getNumberWithOrdinal(percentiles.all);\n  const dpg = getNumberWithOrdinal(percentiles.dpg);\n\n  return (\n    <div style={style} className=\"Percentile table table--fit\">\n      <h5>percentile</h5>\n      <h3>\n        {all.number}\n        <sup>{all.ordinal}</sup>\n      </h3>\n      <h3>\n        {dpg.number}\n        <sup>{dpg.ordinal}</sup>\n      </h3>\n    </div>\n  );\n};\n\nfunction getMassName(form: TeaProduct.Form) {\n  const { name: _name } = form;\n  let mass = parseInt(_name.replace(/\\D/g, \"\"), 10);\n  if (mass === 1) mass = 1000;\n  const tilde = _name.startsWith(\"~\") ? \"~\" : \"\";\n  const nan = Number.isNaN(mass);\n  const name = nan ? \"?\" : `${tilde}${mass}g`;\n  return { nan, mass, name };\n}\n\nconst suffix = [\"th\", \"st\", \"nd\", \"rd\"];\nfunction getNumberWithOrdinal(_number: number) {\n  const number = Math.round(_number);\n  const v = number % 100;\n  const ordinal = suffix[(v - 20) % 10] || suffix[v] || suffix[0];\n  return {\n    number,\n    ordinal,\n  };\n}\n","import \"./Table.scss\";\n\ntype Props = {\n  headings: string[];\n};\n\nexport const TableHeading = ({ headings }: Props) => (\n  <div className=\"TableHeading table table--fit\">\n    {headings.map((h) => (\n      <span key={h}>{h}</span>\n    ))}\n  </div>\n);\n","import { Form, Style } from \"types/TeaProduct\";\nimport \"./Lines.scss\";\nimport { PercentileCircle } from \"./PercentileCircle\";\n\nexport const Line = ({ percentile }: { percentile: number }) => {\n  return (\n    <div className=\"Line\">\n      <PercentileCircle percentile={percentile} />\n    </div>\n  );\n};\n\nexport const LineTable = ({\n  label,\n  percentile,\n}: {\n  label: string;\n  percentile: number;\n}) => {\n  return (\n    <div className=\"Percentile table \">\n      <h5>{label}</h5>\n      <Line percentile={percentile} />\n    </div>\n  );\n};\n\nexport const Lines = ({\n  forms,\n  teaStyle,\n}: {\n  forms: Form[];\n  teaStyle: Style;\n}) => {\n  if (!forms.length) return null;\n  const { percentiles } = forms[0];\n  const { dpg, typeSize } = percentiles;\n  return (\n    <div className=\"Lines\">\n      <LineTable label={\"overall\"} percentile={dpg} />\n      <LineTable label={`${teaStyle}`} percentile={typeSize} />\n      <div className=\"LabelWrapper\">\n        <span className=\"LinesLabel\">cost percentile</span>\n      </div>\n    </div>\n  );\n};\n","import { useRecoilState } from \"recoil\";\nimport { ownedState } from \"states/owned\";\n\nexport const OwnedButton = ({ slug }: { slug: string }) => {\n  const [owned, setOwned] = useRecoilState(ownedState);\n  const isOwned = owned[slug];\n  const toggleOwned = () => {\n    const newOwned = {\n      ...owned,\n      [slug]: !isOwned,\n    };\n    setOwned(newOwned);\n    localStorage.setItem(\"owned\", JSON.stringify(newOwned));\n  };\n  return (\n    <button\n      className={`DetailButton Owned ${isOwned ? \"isOwned\" : \"\"}`}\n      onClick={toggleOwned}\n    >\n      <span className=\"value\">💸</span>\n    </button>\n  );\n};\n","import { getImageUrl, TeaProduct } from \"types/TeaProduct\";\nimport { Image } from \"components/TeaProduct/Image\";\nimport { Description } from \"./Description\";\nimport { LinkButton } from \"./LinkButton\";\nimport \"./Detail.scss\";\nimport { FormPricesTable } from \"./Form\";\nimport { IMAGE_SIZE } from \"types/const\";\nimport { TableHeading } from \"./Table\";\nimport { Lines } from \"./Lines\";\nimport { formatNumber } from \"utils/formatNumber\";\nimport { OwnedButton } from \"./OwnedButton\";\n\ntype Props = {\n  tea: TeaProduct;\n};\n\nexport const Detail = ({ tea }: Props) => {\n  const { year, name, description, url, forms, style, quantity, slug } = tea;\n  const size = IMAGE_SIZE;\n  const imageUrl = getImageUrl(tea.images.wrapperTop || tea.thumbnailUrl, size);\n  const fullName = `${year} ${name}`;\n\n  return (\n    <article className=\"TeaDetail\">\n      <h1 className=\"title glow\">{fullName}</h1>\n      <Image src={imageUrl} alt={name} width={size} height={size} />\n      <p className=\"quantity\">{formatNumber(quantity)}</p>\n      {!forms.length ? null : (\n        <TableHeading headings={[\"Size\", \"Price\", \"$ / g\"]} />\n      )}\n      {forms.map((f, i) => (\n        <FormPricesTable key={f.name} index={i} form={f} style={style} />\n      ))}\n      <Lines forms={forms} teaStyle={style} />\n      <Description glowText={fullName} description={description} />\n      <LinkButton url={url} />\n      <OwnedButton slug={slug} />\n    </article>\n  );\n};\n","export const formatNumber = (number: number) =>\n  new Intl.NumberFormat(\"en-us\").format(number);\n","import { Detail } from \"components/Detail/Detail\";\nimport { useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { allTeasState } from \"states/teas\";\nimport { scrollToId } from \"utils/scrollTo\";\nimport { scrollTop } from \"utils/scrollTop\";\nimport \"./DetailDrawer.scss\";\n\n// const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const Error = ({ slug }: any) => {\n  return (\n    <>\n      <h1>error</h1>\n      <h1>{slug}</h1>\n    </>\n  );\n};\n\nexport const Skeleton = () => {\n  return <div className=\"skeleton\"></div>;\n};\nexport const Drawer = ({ classes, children }: any) => (\n  <aside className={classes} id=\"drawer\">\n    {children}\n  </aside>\n);\n\nexport const DetailDrawer = () => {\n  const allTeas = useRecoilValue(allTeasState);\n  const [params, setParams] = useSearchParams();\n  const detailSlug = params.get(\"detail\");\n  useEffect(() => {\n    scrollTop(\"drawer\");\n  }, [detailSlug]);\n\n  const classes = `drawer ${detailSlug ? \"open\" : \"closed\"}`;\n\n  if (!detailSlug) return <Drawer classes={classes} />;\n  const tea = allTeas.find((t) => t.slug === detailSlug);\n  if (!tea) return null;\n\n  const resetSelected = () => {\n    scrollToId(detailSlug);\n    setParams({});\n  };\n\n  return (\n    <Drawer classes={classes}>\n      <button className=\"DetailButton Close\" onClick={resetSelected}>\n        <span className=\"value\">&times;</span>\n      </button>\n      <Detail tea={tea} />\n    </Drawer>\n  );\n};\n","export const scrollTop = (id: string, offset = 0) => {\n  const elem = document.getElementById(id);\n  if (elem) elem.scrollTop = offset;\n};\n","import { useRecoilValue } from \"recoil\";\nimport { teasState } from \"states/teas\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport \"./Stats.scss\";\nimport { PercentileCircle } from \"./Detail/PercentileCircle\";\nimport { getScaleColor, getScaleTextColor } from \"utils/scale\";\n\nexport const Stat = ({\n  style = {},\n  name,\n  size,\n  total,\n  showPercent = true,\n}: any) => {\n  const percent = (size / total) * 100;\n  const style2 = {\n    ...style,\n    width: percent + \"%\",\n  };\n  const title = `${name} ${percent.toFixed(2)}% (${size}/${total})`;\n  const isSmall = percent < 10;\n  const isReallySmall = percent < 5;\n  const text =\n    isSmall || !showPercent ? name : `${name} ${Math.round(percent)}%`;\n  return (\n    <abbr\n      style={style2}\n      title={title}\n      className={`Stat Stat--${name} ${isSmall ? \"small\" : \"\"} ${\n        isReallySmall ? \"really-small\" : \"\"\n      } ${showPercent ? \"showPercent\" : \"noShowPercent\"}`}\n    >\n      <span className=\"StatText\">{text}</span>\n    </abbr>\n  );\n};\n\nexport const PercentileCount = ({\n  percentile,\n  count,\n}: {\n  percentile: number;\n  count: number;\n}) => (\n  <>\n    <PercentileCircle percentile={percentile} />\n    <span className=\"count\" style={{ color: getScaleTextColor(percentile) }}>\n      {count}\n    </span>\n  </>\n);\n\nexport const Stats = () => {\n  const teas = useRecoilValue(teasState);\n  const styleGroups = groupBy(\"style\", teas);\n  const styles = Object.entries(styleGroups).sort((a, b) =>\n    b[0].localeCompare(a[0])\n  );\n  const percentiles = teas\n    .map((t) => ({\n      name: t.name,\n      dpg: t.forms[0]?.percentiles?.dpg,\n    }))\n    .filter((t) => t.dpg !== undefined);\n  // .sort((a, b) => a.dpg - b.dpg);\n  const firstDigit = (p: any) => p.dpg.toFixed(0).padStart(2, \"0\")[0];\n  const pGroups = groupBy(firstDigit, percentiles);\n  const pGroupEntries = Object.entries(pGroups);\n\n  return (\n    <div className=\"Stats\">\n      <div className=\"StyleBars\">\n        {styles.map(([s, ts]) => (\n          <Stat key={s} name={s} size={ts.length} total={teas.length} />\n        ))}\n      </div>\n      <div className=\"PercentileList StyleBars\">\n        {pGroupEntries.map(([k, xs]) => (\n          // <abbr key={k} title={xs.map((x: any) => x.name).join(\"\\n\")}>\n          //   <PercentileCount percentile={tenX(k)} count={xs.length} />\n          // </abbr>\n          <Stat\n            style={{\n              border: `2px solid ${getScaleColor(tenX(k))}`,\n              color: getScaleTextColor(tenX(k)),\n            }}\n            name={pLabel(k)}\n            size={xs.length}\n            total={percentiles.length}\n            showPercent={false}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nfunction pLabel(p: string) {\n  // if (p === \"0\") return \"< 10\";\n  // if (p === \"9\") return \"90+\";\n  return tenX(p);\n}\n\nfunction tenX(k: string): number {\n  return parseInt(k, 10) * 10;\n}\n","import { getImageUrl, ImageSubject, TeaProduct } from \"types/TeaProduct\";\nimport { Image } from \"./Image\";\nimport \"./Card.scss\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { IMAGE_SIZE } from \"types/const\";\n\nexport type Props = {\n  tea: TeaProduct;\n  subject: ImageSubject;\n};\n\nexport const Card = ({ tea, subject }: Props) => {\n  const [params, setParams] = useSearchParams();\n  const detailSlug = params.get(\"detail\");\n\n  const { year, name, slug, owned } = tea;\n  const setSelected = () =>\n    setParams({\n      detail: slug,\n    });\n\n  const imageUrl = tea.images[subject];\n  const size = IMAGE_SIZE;\n\n  const isSelected = detailSlug === slug;\n  const classes = `TeaCard ${isSelected ? \"selected\" : \"\"} ${\n    owned ? \"owned\" : \"\"\n  }`;\n\n  return (\n    <figure className={classes} onClick={setSelected} id={slug}>\n      <div className=\"content\">\n        <div className=\"icon\"></div>\n        <h3 className=\"year glow\">{year}</h3>\n        <h2 className=\"name\">{name}</h2>\n        <Image\n          src={getImageUrl(imageUrl || \"\", size)}\n          alt={name}\n          width={size}\n          height={size}\n        />\n      </div>\n    </figure>\n  );\n};\n","import { Stats } from \"components/Stats\";\nimport { Card } from \"components/TeaProduct/Card\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { teasState } from \"states/teas\";\nimport { ImageSubject } from \"types/TeaProduct\";\nimport \"./Cards.scss\";\n\nexport const Cards = () => {\n  const { subject } = useParams();\n  const teas = useRecoilValue(teasState);\n\n  const $Teas = teas.map((tea) => (\n    <Card\n      key={tea.slug}\n      tea={tea}\n      subject={(subject as ImageSubject) || \"wrapperTop\"}\n    />\n  ));\n  return (\n    <>\n      <Stats />\n      <section className=\"TeaCards\">{$Teas}</section>\n    </>\n  );\n};\n","import { atom } from 'recoil';\n\nexport const selectedSlugState = atom({\n  key: 'selectedSlug',\n  default: '',\n});\n","import { useRecoilState } from \"recoil\";\nimport { selectedSlugState } from \"../states/selectedSlug\";\nimport { TeaProduct } from \"../types/TeaProduct\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nexport const getDirection = (\n  direction: string,\n  slug: string,\n  teas: TeaProduct[]\n): string => {\n  if (!slug) return teas[0].slug;\n  const i = teas.findIndex((t) => t.slug === slug);\n  const col = 3;\n  switch (direction) {\n    case \"left\":\n      return teas[i - 1]?.slug || teas[teas.length - 1].slug;\n    case \"right\":\n      return teas[i + 1]?.slug || teas[0].slug;\n    case \"up\":\n      return teas[i - col]?.slug || teas[teas.length - 1].slug;\n    case \"down\":\n      return teas[i + col]?.slug || teas[0].slug;\n    default:\n      return slug;\n  }\n};\n\nexport function useKeyboardNavigation(teas: TeaProduct[]) {\n  const [selectedSlug, setSelectedSlug] = useRecoilState(selectedSlugState);\n  useHotkeys(\n    \"left\",\n    () => setSelectedSlug(getDirection(\"left\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"right\",\n    () => setSelectedSlug(getDirection(\"right\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"up\",\n    () => setSelectedSlug(getDirection(\"up\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"down\",\n    () => setSelectedSlug(getDirection(\"down\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n}\n","import { PercentileCircle } from \"components/Detail/PercentileCircle\";\nimport { useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getImageUrl, TeaProduct } from \"types/TeaProduct\";\nimport \"./ListRow.scss\";\n\nconst getRandomStyle = () => {\n  const rand = (min: number, max: number) => Math.random() * (max - min) + min;\n  const left = rand(10, 80);\n  const top = rand(0, 60);\n  const size = rand(100, 400);\n  return { size, top, left };\n};\n\nexport const ListRow = ({ tea }: { tea: TeaProduct }) => {\n  const [params, setParams] = useSearchParams();\n  const { size, top, left } = useMemo(getRandomStyle, [tea.slug]);\n\n  const { year, name, slug, style, thumbnailUrl, forms } = tea;\n  const dpg = forms[0].percentiles.dpg;\n  const detailSlug = params.get(\"detail\");\n\n  const setSelected = () =>\n    setParams({\n      detail: slug,\n    });\n\n  const isSelected = detailSlug === slug;\n  const classes = `ListText ${isSelected ? \"selected glow\" : \"\"}`;\n  const url = getImageUrl(thumbnailUrl, size);\n  const imageStyle = {\n    top: `${top}vh`,\n    left: `${left}vw`,\n    width: `${size}px`,\n    height: `${size}px`,\n  };\n\n  return (\n    <div className={classes} onClick={setSelected} id={slug}>\n      <span className=\"year\">{year} </span>\n      <span className=\"name\">{name} </span>\n      <span className=\"dpg\">\n        {\" \"}\n        <PercentileCircle percentile={dpg} />\n      </span>\n      <span className=\"style\"> {style}</span>\n      <img src={url} width={size} height={size} alt={name} style={imageStyle} />\n    </div>\n  );\n};\n","import { useRecoilValue } from \"recoil\";\nimport { teasState } from \"states/teas\";\nimport { ListRow } from \"components/TeaProduct/ListRow\";\nimport \"./List.scss\";\n\nexport const List = () => {\n  const teas = useRecoilValue(teasState);\n\n  return (\n    <div className=\"List\">\n      {teas.map((t) => (\n        <ListRow key={t.slug} tea={t} />\n      ))}\n    </div>\n  );\n};\n","import { useSearchParams } from \"react-router-dom\";\nimport { IMAGE_SIZE } from \"types/const\";\nimport { getImageUrl, ImageSubject, TeaProduct } from \"types/TeaProduct\";\nimport \"./Slice.scss\";\n\ninterface TeaSliceProps {\n  tea: TeaProduct;\n  subject: ImageSubject;\n}\n\nexport const Slice = ({ tea, subject }: TeaSliceProps) => {\n  const [params, setParams] = useSearchParams();\n  const detailSlug = params.get(\"detail\");\n\n  const { year, name, slug } = tea;\n  const setSelected = () =>\n    setParams({\n      detail: slug,\n    });\n\n  const imageUrl = tea.images[subject];\n  const size = IMAGE_SIZE;\n\n  const isSelected = detailSlug === slug;\n  const classes = `TeaSliceWrapper ${\n    isSelected ? \"selected\" : \"\"\n  } ${subject} ${size}`;\n\n  return (\n    <span className={classes} onClick={setSelected} id={slug}>\n      {imageUrl && (\n        <img\n          src={getImageUrl(imageUrl, size)}\n          alt={name}\n          width={size}\n          height={size}\n          className=\"TeaSlice\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"TeaSliceInfoWrapper\">\n        <div className=\"TeaSliceInfo glow\">\n          <span>{year}</span>\n          <span>{name}</span>\n        </div>\n      </div>\n    </span>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { teasState } from \"states/teas\";\nimport { ImageSubject } from \"types/TeaProduct\";\nimport { Slice } from \"components/TeaProduct/Slice\";\nimport \"./Slices.scss\";\n\nexport const Slices = () => {\n  const teas = useRecoilValue(teasState);\n  const params = useParams();\n  const subject = params.subject as ImageSubject;\n\n  const defaultFilters = getDefaultFilters(subject);\n  const [filteredSizes, setFilteredSizes] = useState(defaultFilters);\n\n  useEffect(() => {\n    setFilteredSizes(getDefaultFilters(subject));\n  }, [subject]);\n\n  const toggle = (size: any) => ({\n    ...filteredSizes,\n    [size]: !filteredSizes[size] as boolean,\n  });\n\n  const Filters = Object.keys(defaultFilters).map((size) => (\n    <button\n      key={size}\n      className={`button toggle ${filteredSizes[size] ? \"checked\" : \"\"}`}\n      onClick={() => setFilteredSizes(toggle(size))}\n    >\n      {size}\n    </button>\n  ));\n\n  const TeaSlices = teas\n    .filter((t) => filteredSizes[t.size])\n    .map((t) => <Slice key={t.slug} tea={t} subject={subject} />);\n\n  return (\n    <>\n      <nav className=\"TeaSliceFilters\">{Filters}</nav>\n      <div className=\"TeaSlices\">{TeaSlices}</div>\n    </>\n  );\n};\n\nexport const getDefaultFilters = (subject: ImageSubject) =>\n  ({\n    cake: true,\n    brick: true,\n    mini: subject === \"wrapperTop\" ? false : true,\n    bamboo: subject === \"wrapperTop\" ? false : true,\n    unknown: subject === \"soup\" ? true : false,\n    // brick: subject === \"wrapperTop\" ? false : true,\n    // mini: subject === \"wrapperTop\" ? false : true,\n  } as any);\n","export type Style =\n  | \"white\"\n  | \"green\"\n  | \"black\"\n  | \"hongcha\"\n  | \"raw\"\n  | \"ripe\"\n  | \"oolong\"\n  | \"huangpian\"\n  | \"unknown\";\n\nexport type Size =\n  | \"cake\"\n  | \"mini\"\n  | \"bamboo\"\n  | \"square\"\n  | \"brick\"\n  | \"ball\"\n  | \"sample\"\n  | \"unknown\";\n\nexport type ImageSubject =\n  | \"leaf\"\n  | \"soup\"\n  | \"teaBottom\"\n  | \"teaDetail\"\n  | \"teaTop\"\n  | \"tong\"\n  | \"chabu\"\n  | \"shirt\"\n  | \"wrapperBottom\"\n  | \"wrapperDetail\"\n  | \"wrapperTop\";\n\nexport const getImageUrl = (url: string, size: number): string =>\n  url.replace(\"SIZEx\", `${size}x`);\n\nexport type Images = Partial<Record<ImageSubject, string>>;\n\nexport interface Percentile {\n  size: number;\n  type: number;\n  typeSize: number;\n  all: number;\n  dpg: number;\n}\n\nexport interface Form {\n  name: string;\n  price: number;\n  inStock: boolean;\n  grams: number;\n  dpg: number;\n  size: Size;\n  percentiles: Percentile;\n}\n\n// export enum FormName {\n//   Name7G = \"7g\",\n//   The100G = \"100g\",\n//   The10G = \"10g\",\n//   The120G = \"120g\",\n//   The1Kg = \"1kg\",\n//   The200G = \"200g\",\n//   The250G = \"250g\",\n//   The250GBrickTuoCake = \"250g Brick/Tuo/Cake\",\n//   The25G = \"25g\",\n//   The25GSample = \"25g Sample\",\n//   The357G = \"357g\",\n//   The357GCake = \"357g Cake\",\n//   The360G = \"360g\",\n//   The49G = \"~49g\",\n//   The49GStack = \"49g Stack\",\n//   The50G = \"~50g\",\n//   The7G = \"~7g\",\n//   The7GMini = \"7g Mini\",\n//   The80G = \"80g\",\n// }\n\nexport interface TeaProduct {\n  slug: string;\n  name: string;\n  year: number;\n  quantity: number;\n  description: string;\n  url: string;\n  thumbnailUrl: string;\n  version: string;\n  style: Style;\n  size: Size;\n  images: Images;\n  forms: Form[];\n  tags: string[];\n  owned?: boolean;\n}\n","import { atom } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nexport type TeaStyleFiltering =\n  | \"all\"\n  | \"raw\"\n  | \"ripe\"\n  | \"white\"\n  | \"black\"\n  | \"oolong\"\n  | \"bamboo\"\n  | \"heicha\"\n  | \"sun-dried\"\n  | \"shade-dried\"\n  | \"smokey\"\n  | \"huigan\"\n  | \"blend\"\n  | \"yiwu\"\n  | \"menghai\"\n  | \"low stock\"\n  | \"rle low stock\";\n\nexport const teaStyleFilteringState = atom({\n  key: \"teaStyleFilter\",\n  default: \"all\" as TeaStyleFiltering,\n});\n\nconst isStyle = (s: TeaStyleFiltering) => (x: TeaProduct) => x.style === s;\nconst identity = (x: TeaProduct) => true;\n\ntype TeaStyleFilteringMap = {\n  [key in TeaStyleFiltering]: (a: TeaProduct) => boolean;\n};\n\nexport const filteringFunctions: TeaStyleFilteringMap = {\n  all: identity,\n  raw: isStyle(\"raw\"),\n  ripe: isStyle(\"ripe\"),\n  white: isStyle(\"white\"),\n  black: isStyle(\"black\"),\n  oolong: isStyle(\"oolong\"),\n  bamboo: (t: TeaProduct) => t.size === \"bamboo\",\n  heicha: (t: TeaProduct) => t.description.includes(\"heicha\"),\n  \"sun-dried\": (t: TeaProduct) => t.description.includes(\"sun dried\"),\n  \"shade-dried\": (t: TeaProduct) => t.description.includes(\"shade dried\"),\n  huigan: (t: TeaProduct) => t.description.includes(\"huigan\"),\n  smokey: (t: TeaProduct) => t.description.includes(\"smoke\"),\n  blend: (t: TeaProduct) => t.description.includes(\"blend\"),\n  yiwu: (t: TeaProduct) => t.description.includes(\"Yiwu\"),\n  menghai: (t: TeaProduct) => t.description.includes(\"Menghai\"),\n  \"low stock\": (t: TeaProduct) => t.quantity < 100 && t.quantity > 0,\n  \"rle low stock\": (t: TeaProduct) => t.quantity < 20 && t.quantity > 0,\n  // TODO add data, then re-enable\n  // 'green': isStyle(TeaStyle.Green),\n  // 'unknown': isStyle(TeaStyle.Unknown),\n};\n","import { atom } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nexport type Sorting = \"-year\" | \"+year\" | \"+name\" | \"-name\" | \"+cost\" | \"-cost\";\nexport const sortings: Sorting[] = [\n  \"-year\",\n  \"+year\",\n  \"-name\",\n  \"+name\",\n  \"-cost\",\n  \"+cost\",\n];\n\nexport const sortingState = atom({\n  key: \"sorting\",\n  default: \"-year\" as Sorting,\n});\n\nconst getName = (x: TeaProduct) => x.name.replace(\"The \", \"\");\n\nconst nameDesc = (a: TeaProduct, b: TeaProduct) =>\n  getName(b).localeCompare(getName(a)) || b.year - a.year;\nconst nameAsc = (a: TeaProduct, b: TeaProduct) =>\n  getName(a).localeCompare(getName(b)) || a.year - b.year;\n\nconst yearDesc = (a: TeaProduct, b: TeaProduct) =>\n  b.year - a.year || nameAsc(a, b);\nconst yearAsc = (a: TeaProduct, b: TeaProduct) =>\n  a.year - b.year || nameAsc(a, b);\n\nconst maxDPG = (x: TeaProduct): number =>\n  Math.max(...x.forms.map((x) => x.dpg));\n\nconst costDesc = (a: TeaProduct, b: TeaProduct) =>\n  maxDPG(b) - maxDPG(a) || nameAsc(a, b);\nconst costAsc = (a: TeaProduct, b: TeaProduct) =>\n  maxDPG(a) - maxDPG(b) || nameAsc(a, b);\n\ntype SortingFunctionMap = {\n  [key in Sorting]: (a: TeaProduct, b: TeaProduct) => number;\n};\n\nexport const sortingFunctions: SortingFunctionMap = {\n  \"-year\": yearDesc,\n  \"+year\": yearAsc,\n  \"-name\": nameDesc,\n  \"+name\": nameAsc,\n  \"-cost\": costDesc,\n  \"+cost\": costAsc,\n};\n","import { atom } from \"recoil\";\n\nexport const personalFilters = [\"all\", \"owned\"] as const;\nexport type PersonalFilter = typeof personalFilters[number];\n\nexport const personalFilterState = atom({\n  key: \"personalFilter\",\n  default: \"all\" as PersonalFilter,\n});\n","const scale = [\n  \"#ffe6cb\",\n  \"#ffe3af\",\n  \"#ffc58a\",\n  \"#ffa474\",\n  \"#fa8366\",\n  \"#ed635c\",\n  \"#db4551\",\n  \"#c52840\",\n  \"#aa0e27\",\n  \"#8b0000\",\n];\nexport const getScaleColor = (number: number) => {\n  const scaleIndex = +Math.floor(number).toFixed(0).padStart(2, \"0\")[0];\n  return scale[scaleIndex];\n};\n\nexport const getScaleTextColor = (number: number) => {\n  return number <= 30 ? \"rgb(197, 134, 42)\" : getScaleColor(number);\n};\n","export const IMAGE_SIZE = 420;\n","import \"./PercentileCircle.scss\";\nimport { getScaleColor, getScaleTextColor } from \"utils/scale\";\n\nexport const PercentileCircle = ({ percentile }: { percentile: number }) => {\n  const style = {\n    left: `${percentile * 2}px`,\n    borderColor: getScaleColor(percentile),\n    color: getScaleTextColor(percentile),\n  };\n\n  const displayed = Math.floor(percentile);\n  return (\n    <span className=\"PercentileCircle\" style={style}>\n      {displayed}\n    </span>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport reportWebVitals from \"./utils/reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <BrowserRouter basename=\"/w2tv\">\n        <App />\n      </BrowserRouter>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { useState } from \"react\";\nimport \"./Image.scss\";\n\ninterface Props {\n  src: string;\n  alt: string;\n  width: number | string;\n  height: number | string;\n  loading?: \"eager\" | \"lazy\" | undefined;\n}\nexport const ImagePreLoader = ({ src, alt, width, height }: Props) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  if (!src) {\n    return (\n      <div className=\"TeaImage placeholder responsive\">\n        <div className=\"circle\"></div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <div\n        className={`TeaImage placeholder responsive ${\n          isLoaded ? \"loaded\" : \"loading\"\n        } `}\n      >\n        <div className=\"circle\"></div>\n      </div>\n      <img\n        src={src}\n        alt={alt}\n        width={width}\n        height={height}\n        className={`TeaImage responsive ${isLoaded ? \"loaded\" : \"loading\"} `}\n        onLoad={() => setIsLoaded(true)}\n      />\n    </>\n  );\n};\nexport const Image = ({ src, alt, width, height, loading }: Props) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  if (!src) {\n    return (\n      <div className=\"TeaImage placeholder responsive\">\n        <div className=\"circle\"></div>\n      </div>\n    );\n  }\n  return (\n    <img\n      src={src}\n      alt={alt}\n      width={width}\n      height={height}\n      className={`TeaImage responsive ${isLoaded ? \"loaded\" : \"loading\"} `}\n      onLoad={() => setIsLoaded(true)}\n      loading={loading}\n    />\n  );\n};\n","import { atom } from \"recoil\";\n\nconst stored = localStorage.getItem(\"owned\");\nconst owned = stored ? JSON.parse(stored) : {};\n\ntype OwnedMap = {\n  [key: string]: boolean;\n};\n\nexport const ownedState = atom({\n  key: \"owned\",\n  default: owned as OwnedMap,\n});\n","export const scrollToId = (id: string, delay = 100) =>\n  setTimeout(() => {\n    if (window.innerWidth <= 1024) return; // FIXME\n    const elem = document.getElementById(id);\n    if (elem) elem.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    else\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: \"smooth\",\n      });\n  }, delay);\n"],"sourceRoot":""}