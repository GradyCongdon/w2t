{"version":3,"sources":["states/teaStyleFiltering.ts","components/Icons.tsx","states/sorting.ts","states/teas.ts","states/personalFilters.ts","states/owned.ts","utils/scrollTo.ts","utils/scale.ts","states/layout.ts","utils/capitalize.ts","components/Selectors/Layout.tsx","components/Selectors/Filtering.tsx","components/Selectors/Personal.tsx","components/Selectors/Sorting.tsx","components/Toggle.tsx","states/whiteBalanced.ts","components/Selectors/Subject.tsx","components/Divider.tsx","components/Heading.tsx","states/nav.ts","components/Nav.tsx","components/Detail/Description.tsx","components/Detail/LinkButton.tsx","components/Detail/Form.tsx","components/Detail/Table.tsx","components/Detail/Lines.tsx","components/Detail/OwnedButton.tsx","hooks/useOwnedToggle.ts","components/Detail/Detail.tsx","utils/formatNumber.ts","routes/DetailDrawer.tsx","utils/scrollTop.ts","types/TeaProduct.ts","types/const.ts","components/Detail/PercentileCircle.tsx","components/TeaProduct/Image.tsx","App.tsx","Empty.tsx","components/Placeholder.tsx","states/selectedSlug.ts","hooks/useKeyboardNavigation.tsx","states/search.ts","components/Search.tsx","utils/reportWebVitals.ts","index.tsx"],"names":["teaStyleFilteringState","atom","key","default","isStyle","s","x","style","filteringFunctions","all","raw","ripe","white","black","oolong","bamboo","t","size","heicha","description","includes","huigan","smokey","blend","yiwu","menghai","quantity","Bookmark","width","height","viewBox","fill","xmlns","className","d","fillRule","clipRule","BookmarkFilled","ExternalLink","sortings","sortingState","getName","name","replace","nameAsc","a","b","localeCompare","year","maxDPG","Math","max","forms","map","dpg","sortingFunctions","allTeasState","teaProducts","teasState","selector","get","selectedFiltering","selectedSorting","personalFilter","personalFilterState","owned","ownedState","isOwned","slug","filter","sort","personalFilters","stored","localStorage","getItem","JSON","parse","scrollToId","id","delay","setTimeout","window","innerWidth","elem","document","getElementById","scrollIntoView","behavior","block","scrollTo","top","left","scale","getScaleColor","number","scaleIndex","floor","toFixed","padStart","getScaleTextColor","layouts","capitalize","str","toUpperCase","slice","toLowerCase","Selector","layout","subject","useParams","location","useLocation","newLocation","pathname","search","to","LayoutSelector","l","Button","filtering","useRecoilState","currentFiltering","set","disabled","onClick","FilteringSelector","$Buttons","Object","keys","icon","PersonalSelector","value","Label","getIcon","sorting","currentSorting","setSorting","SortingSelector","props","Toggle","label","classes","whiteBalancedState","WhiteBalance","isWhiteBalanced","setIsWhiteBalanced","currentSubject","newSubjectLocation","SubjectSelector","Divider","Heading","children","navState","MixVertical","isNavOpen","setIsNavOpen","toggleNav","Nav","Description","lines","target","source","regex","RegExp","glowTitle","replaceWithGlowHtml","glowText","split","html","shift","join","dangerouslySetInnerHTML","__html","LinkButton","url","href","PriceTable","first","second","third","FormPricesTable","form","inStock","index","price","_name","mass","parseInt","tilde","startsWith","nan","Number","isNaN","getMassName","$price","$ppg","textDecoration","color","TableHeading","headings","h","Line","percentile","PercentileCircle","LineTable","Lines","teaStyle","length","percentiles","typeSize","OwnedButton","setOwned","newOwned","setItem","stringify","useOwnedToggle","toggleOwned","Detail","tea","IMAGE_SIZE","imageUrl","getImageUrl","images","wrapperTop","thumbnailUrl","fullName","Image","src","alt","Intl","NumberFormat","format","f","i","Drawer","DetailDrawer","allTeas","useRecoilValue","useSearchParams","params","setParams","detailSlug","useEffect","offset","scrollTop","find","borderColor","displayed","loading","useState","isLoaded","setIsLoaded","onLoad","Cards","lazy","List","Slices","process","console","log","REACT_APP_GIT_MSG","Loading","App","teas","personal","detail","state","json","useKeyboardNavigation","fallback","path","element","Main","Empty","Placeholder","selectedSlugState","getDirection","direction","findIndex","selectedSlug","setSelectedSlug","useHotkeys","searchState","Results","results","setSearchParams","setSearchString","r","item","Search","searchString","setSearch","relevant","Fuse","threshold","includeScore","isCaseSensitive","ignoreLocation","trim","score","type","onChange","e","currentTarget","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.2bed05a3.chunk.js","sourcesContent":["import { atom } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nexport type TeaStyleFiltering =\n  | \"all\"\n  | \"raw\"\n  | \"ripe\"\n  | \"white\"\n  | \"black\"\n  | \"oolong\"\n  | \"bamboo\"\n  | \"heicha\"\n  | \"sun-dried\"\n  | \"shade-dried\"\n  | \"smokey\"\n  | \"huigan\"\n  | \"blend\"\n  | \"yiwu\"\n  | \"menghai\"\n  | \"low stock\"\n  | \"rle low stock\";\n\nexport const teaStyleFilteringState = atom({\n  key: \"teaStyleFilter\",\n  default: \"all\" as TeaStyleFiltering,\n});\n\nconst isStyle = (s: TeaStyleFiltering) => (x: TeaProduct) => x.style === s;\nconst identity = (x: TeaProduct) => true;\n\ntype TeaStyleFilteringMap = {\n  [key in TeaStyleFiltering]: (a: TeaProduct) => boolean;\n};\n\nexport const filteringFunctions: TeaStyleFilteringMap = {\n  all: identity,\n  raw: isStyle(\"raw\"),\n  ripe: isStyle(\"ripe\"),\n  white: isStyle(\"white\"),\n  black: isStyle(\"black\"),\n  oolong: isStyle(\"oolong\"),\n  bamboo: (t: TeaProduct) => t.size === \"bamboo\",\n  heicha: (t: TeaProduct) => t.description.includes(\"heicha\"),\n  \"sun-dried\": (t: TeaProduct) => t.description.includes(\"sun dried\"),\n  \"shade-dried\": (t: TeaProduct) => t.description.includes(\"shade dried\"),\n  huigan: (t: TeaProduct) => t.description.includes(\"huigan\"),\n  smokey: (t: TeaProduct) => t.description.includes(\"smoke\"),\n  blend: (t: TeaProduct) => t.description.includes(\"blend\"),\n  yiwu: (t: TeaProduct) => t.description.includes(\"Yiwu\"),\n  menghai: (t: TeaProduct) => t.description.includes(\"Menghai\"),\n  \"low stock\": (t: TeaProduct) => t.quantity < 100 && t.quantity > 0,\n  \"rle low stock\": (t: TeaProduct) => t.quantity < 20 && t.quantity > 0,\n  // TODO add data, then re-enable\n  // 'green': isStyle(TeaStyle.Green),\n  // 'unknown': isStyle(TeaStyle.Unknown),\n};\n","import \"./Icons.scss\";\n\nexport const Bookmark = () => {\n  return (\n    <svg\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"Icon Bookmark\"\n    >\n      <path\n        d=\"M3 2.5C3 2.22386 3.22386 2 3.5 2H11.5C11.7761 2 12 2.22386 12 2.5V13.5C12 13.6818 11.9014 13.8492 11.7424 13.9373C11.5834 14.0254 11.3891 14.0203 11.235 13.924L7.5 11.5896L3.765 13.924C3.61087 14.0203 3.41659 14.0254 3.25762 13.9373C3.09864 13.8492 3 13.6818 3 13.5V2.5ZM4 3V12.5979L6.97 10.7416C7.29427 10.539 7.70573 10.539 8.03 10.7416L11 12.5979V3H4Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      ></path>\n    </svg>\n  );\n};\n\nexport const BookmarkFilled = () => (\n  <svg\n    width=\"15\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"Icon BookmarkFilled\"\n  >\n    <path\n      d=\"M3.5 2C3.22386 2 3 2.22386 3 2.5V13.5C3 13.6818 3.09864 13.8492 3.25762 13.9373C3.41659 14.0254 3.61087 14.0203 3.765 13.924L7.5 11.5896L11.235 13.924C11.3891 14.0203 11.5834 14.0254 11.7424 13.9373C11.9014 13.8492 12 13.6818 12 13.5V2.5C12 2.22386 11.7761 2 11.5 2H3.5Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    ></path>\n  </svg>\n);\nexport const Link2 = () => (\n  <svg\n    width=\"15\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"Icon Link2\"\n  >\n    <path\n      d=\"M8.51194 3.00541C9.18829 2.54594 10.0435 2.53694 10.6788 2.95419C10.8231 3.04893 10.9771 3.1993 11.389 3.61119C11.8009 4.02307 11.9513 4.17714 12.046 4.32141C12.4633 4.95675 12.4543 5.81192 11.9948 6.48827C11.8899 6.64264 11.7276 6.80811 11.3006 7.23511L10.6819 7.85383C10.4867 8.04909 10.4867 8.36567 10.6819 8.56093C10.8772 8.7562 11.1938 8.7562 11.389 8.56093L12.0077 7.94221L12.0507 7.89929C12.4203 7.52976 12.6568 7.2933 12.822 7.0502C13.4972 6.05623 13.5321 4.76252 12.8819 3.77248C12.7233 3.53102 12.4922 3.30001 12.1408 2.94871L12.0961 2.90408L12.0515 2.85942C11.7002 2.508 11.4692 2.27689 11.2277 2.11832C10.2377 1.46813 8.94398 1.50299 7.95001 2.17822C7.70691 2.34336 7.47044 2.57991 7.1009 2.94955L7.058 2.99247L6.43928 3.61119C6.24401 3.80645 6.24401 4.12303 6.43928 4.31829C6.63454 4.51355 6.95112 4.51355 7.14638 4.31829L7.7651 3.69957C8.1921 3.27257 8.35757 3.11027 8.51194 3.00541ZM4.31796 7.14672C4.51322 6.95146 4.51322 6.63487 4.31796 6.43961C4.12269 6.24435 3.80611 6.24435 3.61085 6.43961L2.99213 7.05833L2.94922 7.10124C2.57957 7.47077 2.34303 7.70724 2.17788 7.95035C1.50265 8.94432 1.4678 10.238 2.11799 11.2281C2.27656 11.4695 2.50766 11.7005 2.8591 12.0518L2.90374 12.0965L2.94837 12.1411C3.29967 12.4925 3.53068 12.7237 3.77214 12.8822C4.76219 13.5324 6.05589 13.4976 7.04986 12.8223C7.29296 12.6572 7.52943 12.4206 7.89896 12.051L7.89897 12.051L7.94188 12.0081L8.5606 11.3894C8.75586 11.1941 8.75586 10.8775 8.5606 10.6823C8.36533 10.487 8.04875 10.487 7.85349 10.6823L7.23477 11.301C6.80777 11.728 6.6423 11.8903 6.48794 11.9951C5.81158 12.4546 4.95642 12.4636 4.32107 12.0464C4.17681 11.9516 4.02274 11.8012 3.61085 11.3894C3.19896 10.9775 3.0486 10.8234 2.95385 10.6791C2.53661 10.0438 2.54561 9.18863 3.00507 8.51227C3.10993 8.35791 3.27224 8.19244 3.69924 7.76544L4.31796 7.14672ZM9.62172 6.08558C9.81698 5.89032 9.81698 5.57373 9.62172 5.37847C9.42646 5.18321 9.10988 5.18321 8.91461 5.37847L5.37908 8.91401C5.18382 9.10927 5.18382 9.42585 5.37908 9.62111C5.57434 9.81637 5.89092 9.81637 6.08619 9.62111L9.62172 6.08558Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    ></path>\n  </svg>\n);\nexport const ExternalLink = () => (\n  <svg\n    width=\"15\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"Icon ExternalLink\"\n  >\n    <path\n      d=\"M3 2C2.44772 2 2 2.44772 2 3V12C2 12.5523 2.44772 13 3 13H12C12.5523 13 13 12.5523 13 12V8.5C13 8.22386 12.7761 8 12.5 8C12.2239 8 12 8.22386 12 8.5V12H3V3L6.5 3C6.77614 3 7 2.77614 7 2.5C7 2.22386 6.77614 2 6.5 2H3ZM12.8536 2.14645C12.9015 2.19439 12.9377 2.24964 12.9621 2.30861C12.9861 2.36669 12.9996 2.4303 13 2.497L13 2.5V2.50049V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3.70711L6.85355 8.85355C6.65829 9.04882 6.34171 9.04882 6.14645 8.85355C5.95118 8.65829 5.95118 8.34171 6.14645 8.14645L11.2929 3H9.5C9.22386 3 9 2.77614 9 2.5C9 2.22386 9.22386 2 9.5 2H12.4999H12.5C12.5678 2 12.6324 2.01349 12.6914 2.03794C12.7504 2.06234 12.8056 2.09851 12.8536 2.14645Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    ></path>\n  </svg>\n);\n","import { atom } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nexport type Sorting = \"-year\" | \"+year\" | \"+name\" | \"-name\" | \"+cost\" | \"-cost\";\nexport const sortings: Sorting[] = [\n  \"-year\",\n  \"+year\",\n  \"-name\",\n  \"+name\",\n  \"-cost\",\n  \"+cost\",\n];\n\nexport const sortingState = atom({\n  key: \"sorting\",\n  default: \"-year\" as Sorting,\n});\n\nconst getName = (x: TeaProduct) => x.name.replace(\"The \", \"\");\n\nconst nameDesc = (a: TeaProduct, b: TeaProduct) =>\n  getName(b).localeCompare(getName(a)) || b.year - a.year;\nconst nameAsc = (a: TeaProduct, b: TeaProduct) =>\n  getName(a).localeCompare(getName(b)) || a.year - b.year;\n\nconst yearDesc = (a: TeaProduct, b: TeaProduct) =>\n  b.year - a.year || nameAsc(a, b);\nconst yearAsc = (a: TeaProduct, b: TeaProduct) =>\n  a.year - b.year || nameAsc(a, b);\n\nconst maxDPG = (x: TeaProduct): number =>\n  Math.max(...x.forms.map((x) => x.dpg));\n\nconst costDesc = (a: TeaProduct, b: TeaProduct) =>\n  maxDPG(b) - maxDPG(a) || nameAsc(a, b);\nconst costAsc = (a: TeaProduct, b: TeaProduct) =>\n  maxDPG(a) - maxDPG(b) || nameAsc(a, b);\n\ntype SortingFunctionMap = {\n  [key in Sorting]: (a: TeaProduct, b: TeaProduct) => number;\n};\n\nexport const sortingFunctions: SortingFunctionMap = {\n  \"-year\": yearDesc,\n  \"+year\": yearAsc,\n  \"-name\": nameDesc,\n  \"+name\": nameAsc,\n  \"-cost\": costDesc,\n  \"+cost\": costAsc,\n};\n","import { atom, selector } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nimport teaProducts from \"teaProducts.json\";\nimport {\n  filteringFunctions,\n  teaStyleFilteringState,\n} from \"./teaStyleFiltering\";\nimport { sortingFunctions, sortingState } from \"./sorting\";\nimport { ownedState } from \"./owned\";\nimport { personalFilterState } from \"./personalFilters\";\n\nexport const allTeasState = atom({\n  key: \"allTeas\",\n  default: teaProducts as TeaProduct[],\n});\n\nexport const teasState = selector({\n  key: \"teas\",\n  get: ({ get }) => {\n    const all = get(allTeasState);\n    const selectedFiltering = get(teaStyleFilteringState);\n    const selectedSorting = get(sortingState);\n    const personalFilter = get(personalFilterState);\n    const owned = get(ownedState);\n\n    return all\n      .map((t) => {\n        const isOwned = owned[t.slug];\n        return {\n          ...t,\n          owned: isOwned,\n        };\n      })\n      .filter((t) => {\n        switch (personalFilter) {\n          case \"owned\": {\n            if (!t.owned) return false;\n            break;\n          }\n          case \"all\":\n          default: {\n            break;\n          }\n        }\n        const filter = filteringFunctions[selectedFiltering];\n        return filter(t);\n      })\n      .sort(sortingFunctions[selectedSorting]);\n  },\n});\n","import { atom } from \"recoil\";\n\nexport const personalFilters = [\"all\", \"owned\"] as const;\nexport type PersonalFilter = typeof personalFilters[number];\n\nexport const personalFilterState = atom({\n  key: \"personalFilter\",\n  default: \"all\" as PersonalFilter,\n});\n","import { atom } from \"recoil\";\n\nconst stored = localStorage.getItem(\"owned\");\nconst owned = stored ? JSON.parse(stored) : {};\n\ntype OwnedMap = {\n  [key: string]: boolean;\n};\n\nexport const ownedState = atom({\n  key: \"owned\",\n  default: owned as OwnedMap,\n});\n","export const scrollToId = (id: string, delay = 100) =>\n  setTimeout(() => {\n    if (window.innerWidth <= 1024) return; // FIXME\n    const elem = document.getElementById(id);\n    if (elem) elem.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    else\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: \"smooth\",\n      });\n  }, delay);\n","const scale = [\n  \"#ffe6cb\",\n  \"#ffe3af\",\n  \"#ffc58a\",\n  \"#ffa474\",\n  \"#fa8366\",\n  \"#ed635c\",\n  \"#db4551\",\n  \"#c52840\",\n  \"#aa0e27\",\n  \"#8b0000\",\n];\nexport const getScaleColor = (number: number) => {\n  const scaleIndex = +Math.floor(number).toFixed(0).padStart(2, \"0\")[0];\n  return scale[scaleIndex];\n};\n\nexport const getScaleTextColor = (number: number) => {\n  return number <= 30 ? \"rgb(197, 134, 42)\" : getScaleColor(number);\n};\n","import { atom } from \"recoil\";\n\nexport type Layout = \"cards\" | \"list\" | \"slices\";\n\nexport const layouts: Layout[] = [\"cards\", \"slices\", \"list\"];\n\nexport const layoutState = atom({\n  key: \"layout\",\n  default: \"cards\" as Layout,\n});\n","export const capitalize = (str: string) => str[0].toUpperCase() + str.slice(1).toLowerCase();","import { NavLink, useLocation, useParams } from \"react-router-dom\";\nimport { Layout, layouts } from \"states/layout\";\nimport { capitalize } from \"utils/capitalize\";\n\nexport const Selector = ({ layout }: { layout: Layout }) => {\n  const { subject } = useParams();\n  const location = useLocation();\n\n  const newLocation = {\n    pathname: `${layout}/${subject}`,\n    search: location.search,\n  };\n  return (\n    <NavLink className=\"button radio button--layout\" to={newLocation}>\n      <span className=\"label\">{capitalize(layout)}</span>\n    </NavLink>\n  );\n};\n\nexport const LayoutSelector = () => (\n  <>\n    {layouts.map((l) => (\n      <Selector key={l} layout={l} />\n    ))}\n  </>\n);\n","import { useRecoilState } from \"recoil\";\nimport {\n  filteringFunctions,\n  TeaStyleFiltering,\n  teaStyleFilteringState,\n} from \"states/teaStyleFiltering\";\n\nexport const Button = ({ filtering }: { filtering: TeaStyleFiltering }) => {\n  const [currentFiltering, set] = useRecoilState(teaStyleFilteringState);\n  return (\n    <button\n      className=\"button radio button--filter\"\n      disabled={filtering === currentFiltering}\n      onClick={() => set(filtering)}\n    >\n      {filtering}\n    </button>\n  );\n};\n\nexport const FilteringSelector = () => {\n  const $Buttons = Object.keys(filteringFunctions).map((key) => (\n    <Button filtering={key as TeaStyleFiltering} key={key} />\n  ));\n  return <>{$Buttons}</>;\n};\n","import { Bookmark, BookmarkFilled } from \"components/Icons\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  personalFilterState,\n  PersonalFilter,\n  personalFilters,\n} from \"states/personalFilters\";\nimport \"./Personal.scss\";\n\nexport const Button = ({ filtering }: { filtering: PersonalFilter }) => {\n  const [currentFiltering, set] = useRecoilState(personalFilterState);\n  const icon = currentFiltering === \"owned\" ? <BookmarkFilled /> : <Bookmark />;\n  return (\n    <button\n      className=\"button radio button--filter button--personal\"\n      disabled={filtering === currentFiltering}\n      onClick={() => set(filtering)}\n    >\n      {filtering === \"owned\" && icon}\n      {filtering}\n    </button>\n  );\n};\n\nexport const PersonalSelector = () => {\n  const $Buttons = personalFilters.map((value) => (\n    <Button filtering={value as PersonalFilter} key={value} />\n  ));\n  return <>{$Buttons}</>;\n};\n","import { useRecoilState } from \"recoil\";\nimport { Sorting, sortings, sortingState } from \"states/sorting\";\n\nconst getIcon = (value: string) => {\n  switch (value[0]) {\n    case \"+\": {\n      // return '⬈';\n      return \"+\";\n    }\n    case \"-\": {\n      // return '⬊';\n      return \"-\";\n    }\n    default: {\n      return \"?\";\n    }\n  }\n};\n\nconst Label = ({ value }: any) => {\n  const icon = getIcon(value);\n  return (\n    <span className=\"label\">\n      <span className=\"text\">{value.slice(1)}</span>\n      &nbsp;\n      <span className=\"icon--plain\">{icon}</span>\n    </span>\n  );\n};\n\nexport const Button = ({ sorting }: { sorting: Sorting }) => {\n  const [currentSorting, setSorting] = useRecoilState(sortingState);\n  return (\n    <button\n      className=\"button radio button--sort\"\n      disabled={sorting === currentSorting}\n      onClick={() => setSorting(sorting)}\n    >\n      <Label value={sorting} />\n    </button>\n  );\n};\n\nexport const SortingSelector = (props: any) => {\n  const $Buttons = sortings.map((s) => <Button sorting={s} key={s} />);\n  return <>{$Buttons}</>;\n};\n","import { Dispatch, SetStateAction } from \"react\";\n\ninterface ToggleProps {\n  value: boolean;\n  set: Dispatch<SetStateAction<boolean>>;\n  label: string;\n  classes?: string;\n}\n\nexport const Toggle = ({ value, label, set, classes = '' }: ToggleProps) => (\n  <button\n    className={`button toggle ${value ? 'checked' : ''} ${classes}`}\n    onClick={() => set(!value)}\n  >\n    {label}\n  </button>\n);\n","import { atom } from 'recoil';\n\nexport const whiteBalancedState = atom({\n  key: 'whiteBalanced',\n  default: true,\n});\n","import { NavLink, useLocation, useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { Toggle } from \"components/Toggle\";\nimport { whiteBalancedState } from \"states/whiteBalanced\";\nimport { ImageSubject } from \"types/TeaProduct\";\nimport { capitalize } from \"utils/capitalize\";\nimport \"./Subject.scss\";\n\nconst WhiteBalance = () => {\n  const [isWhiteBalanced, setIsWhiteBalanced] =\n    useRecoilState(whiteBalancedState);\n  return (\n    <Toggle\n      value={isWhiteBalanced}\n      set={setIsWhiteBalanced}\n      label=\"wb\"\n      classes=\"WhiteBalance\"\n    />\n  );\n};\n\nconst label = (subject: ImageSubject) => capitalize(subject[0]);\n\nconst Button = ({ subject }: { subject: ImageSubject }) => {\n  const { subject: currentSubject } = useParams();\n  const location = useLocation();\n\n  const newSubjectLocation = currentSubject\n    ? {\n        pathname: location.pathname.replace(currentSubject, subject),\n        search: location.search,\n      }\n    : \"/\";\n  return (\n    <NavLink\n      className={`button radio button--subject `}\n      to={newSubjectLocation}\n      // disabled={currentSubject === subject}\n    >\n      {label(subject)}\n    </NavLink>\n  );\n};\n\nexport const SubjectSelector = () => {\n  const { subject: currentSubject } = useParams();\n  return (\n    <nav className={`subject-selector global`}>\n      <Button subject=\"wrapperTop\" />\n      <Button subject=\"teaTop\" />\n      <div className={`subject--white-balanced ${currentSubject}`}>\n        <WhiteBalance />\n        <Button subject=\"soup\" />\n      </div>\n    </nav>\n  );\n};\n","export const Divider = () => (\n  <>\n    <br />\n    <br />\n  </>\n);\n","export const Heading = ({ children }: any) => (\n  <h1 className=\"heading\" onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>{children}</h1>\n);\n","import { atom } from \"recoil\";\n\nexport const navState = atom({\n  key: \"nav\",\n  default: false,\n});\n","import { LayoutSelector } from \"components/Selectors/Layout\";\nimport { FilteringSelector } from \"components/Selectors/Filtering\";\nimport { PersonalSelector } from \"components/Selectors/Personal\";\nimport { SortingSelector } from \"components/Selectors/Sorting\";\nimport { SubjectSelector } from \"components/Selectors/Subject\";\nimport { Divider } from \"components/Divider\";\nimport { Heading } from \"components/Heading\";\nimport { navState } from \"states/nav\";\nimport { useRecoilState } from \"recoil\";\nimport \"./Nav.scss\";\n\nconst MixVertical = () => (\n  <svg\n    width=\"15\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M5 1.5C5 1.22386 4.77614 1 4.5 1C4.22386 1 4 1.22386 4 1.5L4 7C4 7.01671 4.00082 7.03323 4.00242 7.04952C2.86009 7.28022 2 8.28967 2 9.5C2 10.7103 2.86009 11.7198 4.00242 11.9505C4.00082 11.9668 4 11.9833 4 12V13.5C4 13.7761 4.22386 14 4.5 14C4.77614 14 5 13.7761 5 13.5V12C5 11.9833 4.99918 11.9668 4.99758 11.9505C6.1399 11.7198 7 10.7103 7 9.5C7 8.28967 6.1399 7.28022 4.99758 7.04952C4.99918 7.03323 5 7.01671 5 7L5 1.5ZM11 1.5C11 1.22386 10.7761 1 10.5 1C10.2239 1 10 1.22386 10 1.5V3C10 3.01671 10.0008 3.03323 10.0024 3.04952C8.8601 3.28022 8 4.28967 8 5.5C8 6.71033 8.8601 7.71978 10.0024 7.95048C10.0008 7.96677 10 7.98329 10 8V13.5C10 13.7761 10.2239 14 10.5 14C10.7761 14 11 13.7761 11 13.5V8C11 7.98329 10.9992 7.96677 10.9976 7.95048C12.1399 7.71978 13 6.71033 13 5.5C13 4.28967 12.1399 3.28022 10.9976 3.04952C10.9992 3.03323 11 3.01671 11 3V1.5ZM4.5 8C3.67157 8 3 8.67157 3 9.5C3 10.3284 3.67157 11 4.5 11C5.32843 11 6 10.3284 6 9.5C6 8.67157 5.32843 8 4.5 8ZM9 5.5C9 4.67157 9.67157 4 10.5 4C11.3284 4 12 4.67157 12 5.5C12 6.32843 11.3284 7 10.5 7C9.67157 7 9 6.32843 9 5.5Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n    ></path>\n  </svg>\n);\n\nconst Button = () => {\n  const [isNavOpen, setIsNavOpen] = useRecoilState(navState);\n  const toggleNav = () => setIsNavOpen(!isNavOpen);\n\n  return (\n    <div\n      onClick={toggleNav}\n      className={`NavShadow ${isNavOpen ? \"open\" : \"closed\"}`}\n    >\n      <button onClick={toggleNav} className=\"controls--global_button\">\n        {/* <Playstation /> */}\n        <MixVertical />\n      </button>\n    </div>\n  );\n};\n\nexport const Nav = () => {\n  const [isNavOpen] = useRecoilState(navState);\n  return (\n    <>\n      <Button />\n      <aside className={`controls--global ${isNavOpen ? \"open\" : \"\"}`}>\n        <Heading>w2tv</Heading>\n        <SubjectSelector />\n        <LayoutSelector />\n        <Divider />\n        <SortingSelector />\n        <Divider />\n        <PersonalSelector />\n        <Divider />\n        <FilteringSelector />\n        <Divider />\n      </aside>\n    </>\n  );\n};\n","export function replaceWithGlowHtml(target: string, source: string) {\n  const regex = new RegExp(target, \"g\");\n  const glowTitle = `<span class=\"glow\">${target}</span>`;\n  const descriptionGlow = source.replace(regex, glowTitle);\n  return descriptionGlow;\n}\ntype Props = {\n  description: string;\n  glowText: string;\n};\n\nexport const Description = ({ description, glowText }: Props) => {\n  const descriptionGlow = replaceWithGlowHtml(glowText, description);\n  const lines = descriptionGlow.split(\".\");\n  const html = `\n<p>\n  ${lines.shift()}.\n</p>\n<p>\n  ${lines.join(\". \")}\n</p>\n  `;\n  return (\n    <div className=\"description\" dangerouslySetInnerHTML={{ __html: html }} />\n  );\n};\n","import { ExternalLink } from \"components/Icons\";\nimport \"./LinkButton.scss\";\n\nexport const LinkButton = ({ url }: { url: string }) => {\n  return (\n    <a className=\"DetailButton Link\" href={url}>\n      <ExternalLink />\n    </a>\n  );\n};\n","import * as TeaProduct from \"types/TeaProduct\";\nimport \"./Table.scss\";\nimport \"./Form.scss\";\n\nconst PriceTable = ({ style, first, second, third }: any) => (\n  <div style={style} className=\"Table table\">\n    <h2>{first}</h2>\n    <h3>{second}</h3>\n    <h4>{third}</h4>\n  </div>\n);\n\ntype Props = {\n  form: TeaProduct.Form;\n  style: string;\n  index: number;\n};\n\nexport const FormPricesTable = ({ form, style: teaStyle, index }: Props) => {\n  const { inStock, price } = form;\n\n  var { nan, mass, name } = getMassName(form);\n  const $price = \"$\" + price.toFixed(2);\n  const $ppg = nan ? \"$?\" : \"$\" + (price / mass).toFixed(2);\n\n  const style = {\n    textDecoration: inStock ? \"none\" : \"line-through\",\n    color: inStock ? \"inherit\" : \"var(--grey-medium)\",\n  };\n\n  return (\n    <div className=\"FormPricesTable\">\n      <PriceTable style={style} first={name} second={$price} third={$ppg} />\n    </div>\n  );\n};\n\nexport const FormPercentileTable = ({ form }: Props) => {\n  const { inStock, percentiles } = form;\n\n  const style = {\n    textDecoration: inStock ? \"none\" : \"line-through\",\n    color: inStock ? \"inherit\" : \"var(--grey-medium)\",\n  };\n  const all = getNumberWithOrdinal(percentiles.all);\n  const dpg = getNumberWithOrdinal(percentiles.dpg);\n\n  return (\n    <div style={style} className=\"Percentile table table--fit\">\n      <h5>percentile</h5>\n      <h3>\n        {all.number}\n        <sup>{all.ordinal}</sup>\n      </h3>\n      <h3>\n        {dpg.number}\n        <sup>{dpg.ordinal}</sup>\n      </h3>\n    </div>\n  );\n};\n\nfunction getMassName(form: TeaProduct.Form) {\n  const { name: _name } = form;\n  let mass = parseInt(_name.replace(/\\D/g, \"\"), 10);\n  if (mass === 1) mass = 1000;\n  const tilde = _name.startsWith(\"~\") ? \"~\" : \"\";\n  const nan = Number.isNaN(mass);\n  const name = nan ? \"?\" : `${tilde}${mass}g`;\n  return { nan, mass, name };\n}\n\nconst suffix = [\"th\", \"st\", \"nd\", \"rd\"];\nfunction getNumberWithOrdinal(_number: number) {\n  const number = Math.round(_number);\n  const v = number % 100;\n  const ordinal = suffix[(v - 20) % 10] || suffix[v] || suffix[0];\n  return {\n    number,\n    ordinal,\n  };\n}\n","import \"./Table.scss\";\n\ntype Props = {\n  headings: string[];\n};\n\nexport const TableHeading = ({ headings }: Props) => (\n  <div className=\"TableHeading table table--fit\">\n    {headings.map((h) => (\n      <span key={h}>{h}</span>\n    ))}\n  </div>\n);\n","import { Form, Style } from \"types/TeaProduct\";\nimport \"./Lines.scss\";\nimport { PercentileCircle } from \"./PercentileCircle\";\n\nexport const Line = ({ percentile }: { percentile: number }) => {\n  return (\n    <div className=\"Line\">\n      <PercentileCircle percentile={percentile} />\n    </div>\n  );\n};\n\nexport const LineTable = ({\n  label,\n  percentile,\n}: {\n  label: string;\n  percentile: number;\n}) => {\n  return (\n    <div className=\"Percentile table \">\n      <h5>{label}</h5>\n      <Line percentile={percentile} />\n    </div>\n  );\n};\n\nexport const Lines = ({\n  forms,\n  teaStyle,\n}: {\n  forms: Form[];\n  teaStyle: Style;\n}) => {\n  if (!forms.length) return null;\n  const { percentiles } = forms[0];\n  const { dpg, typeSize } = percentiles;\n  return (\n    <div className=\"Lines\">\n      <LineTable label={\"overall\"} percentile={dpg} />\n      <LineTable label={`${teaStyle}`} percentile={typeSize} />\n      <div className=\"LabelWrapper\">\n        <span className=\"LinesLabel\">cost percentile</span>\n      </div>\n    </div>\n  );\n};\n","import { BookmarkFilled, Bookmark } from \"components/Icons\";\nimport { useOwnedToggle } from \"hooks/useOwnedToggle\";\nimport \"./OwnedButton.scss\";\n\nexport const OwnedButton = ({ slug }: { slug: string }) => {\n  const [isOwned, toggleOwned] = useOwnedToggle(slug);\n\n  return (\n    <button\n      className={`DetailButton Owned ${isOwned ? \"isOwned\" : \"\"}`}\n      onClick={toggleOwned}\n    >\n      <span className=\"value\">\n        {isOwned ? <BookmarkFilled /> : <Bookmark />}\n      </span>\n    </button>\n  );\n};\n","import { useRecoilState } from \"recoil\";\nimport { ownedState } from \"states/owned\";\n\nexport const useOwnedToggle = (slug: string): [boolean, () => void] => {\n  const [owned, setOwned] = useRecoilState(ownedState);\n  const isOwned = owned[slug];\n  const toggleOwned = () => {\n    const newOwned = {\n      ...owned,\n      [slug]: !isOwned,\n    };\n    setOwned(newOwned);\n    localStorage.setItem(\"owned\", JSON.stringify(newOwned));\n  };\n  return [isOwned, toggleOwned];\n};\n","import { getImageUrl, TeaProduct } from \"types/TeaProduct\";\nimport { Image } from \"components/TeaProduct/Image\";\nimport { Description } from \"./Description\";\nimport { LinkButton } from \"./LinkButton\";\nimport \"./Detail.scss\";\nimport { FormPricesTable } from \"./Form\";\nimport { IMAGE_SIZE } from \"types/const\";\nimport { TableHeading } from \"./Table\";\nimport { Lines } from \"./Lines\";\nimport { formatNumber } from \"utils/formatNumber\";\nimport { OwnedButton } from \"./OwnedButton\";\n\ntype Props = {\n  tea: TeaProduct;\n};\n\nexport const Detail = ({ tea }: Props) => {\n  const { year, name, description, url, forms, style, quantity, slug } = tea;\n  const size = IMAGE_SIZE;\n  const imageUrl = getImageUrl(tea.images.wrapperTop || tea.thumbnailUrl, size);\n  const fullName = `${year} ${name}`;\n\n  return (\n    <article className=\"TeaDetail\">\n      <h1 className=\"title glow\">{fullName}</h1>\n      <Image src={imageUrl} alt={name} width={size} height={size} />\n      <p className=\"quantity\">{formatNumber(quantity)}</p>\n      {!forms.length ? null : (\n        <TableHeading headings={[\"Size\", \"Price\", \"$ / g\"]} />\n      )}\n      {forms.map((f, i) => (\n        <FormPricesTable key={f.name} index={i} form={f} style={style} />\n      ))}\n      <Lines forms={forms} teaStyle={style} />\n      <Description glowText={fullName} description={description} />\n      <LinkButton url={url} />\n      <OwnedButton slug={slug} />\n    </article>\n  );\n};\n","export const formatNumber = (number: number) =>\n  new Intl.NumberFormat(\"en-us\").format(number);\n","import { Detail } from \"components/Detail/Detail\";\nimport { useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { allTeasState } from \"states/teas\";\nimport { scrollToId } from \"utils/scrollTo\";\nimport { scrollTop } from \"utils/scrollTop\";\nimport \"./DetailDrawer.scss\";\n\n// const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const Error = ({ slug }: any) => {\n  return (\n    <>\n      <h1>error</h1>\n      <h1>{slug}</h1>\n    </>\n  );\n};\n\nexport const Skeleton = () => {\n  return <div className=\"skeleton\"></div>;\n};\nexport const Drawer = ({ classes, children }: any) => (\n  <aside className={classes} id=\"drawer\">\n    {children}\n  </aside>\n);\n\nexport const DetailDrawer = () => {\n  const allTeas = useRecoilValue(allTeasState);\n  const [params, setParams] = useSearchParams();\n  const detailSlug = params.get(\"detail\");\n  useEffect(() => {\n    scrollTop(\"drawer\");\n  }, [detailSlug]);\n\n  const classes = `drawer ${detailSlug ? \"open\" : \"closed\"}`;\n\n  if (!detailSlug) return <Drawer classes={classes} />;\n  const tea = allTeas.find((t) => t.slug === detailSlug);\n  if (!tea) return null;\n\n  const resetSelected = () => {\n    scrollToId(detailSlug);\n    setParams({});\n  };\n\n  return (\n    <Drawer classes={classes}>\n      <button className=\"DetailButton Close\" onClick={resetSelected}>\n        <span className=\"value\">&times;</span>\n      </button>\n      <Detail tea={tea} />\n    </Drawer>\n  );\n};\n\nexport default DetailDrawer;\n","export const scrollTop = (id: string, offset = 0) => {\n  const elem = document.getElementById(id);\n  if (elem) elem.scrollTop = offset;\n};\n","export type Style =\n  | \"white\"\n  | \"green\"\n  | \"black\"\n  | \"hongcha\"\n  | \"raw\"\n  | \"ripe\"\n  | \"oolong\"\n  | \"huangpian\"\n  | \"unknown\";\n\nexport type Size =\n  | \"cake\"\n  | \"mini\"\n  | \"bamboo\"\n  | \"square\"\n  | \"brick\"\n  | \"ball\"\n  | \"sample\"\n  | \"unknown\";\n\nexport type ImageSubject =\n  | \"leaf\"\n  | \"soup\"\n  | \"teaBottom\"\n  | \"teaDetail\"\n  | \"teaTop\"\n  | \"tong\"\n  | \"chabu\"\n  | \"shirt\"\n  | \"wrapperBottom\"\n  | \"wrapperDetail\"\n  | \"wrapperTop\";\n\nexport const getImageUrl = (url: string, size: number): string =>\n  url.replace(\"SIZEx\", `${size}x`);\n\nexport type Images = Partial<Record<ImageSubject, string>>;\n\nexport interface Percentile {\n  size: number;\n  type: number;\n  typeSize: number;\n  all: number;\n  dpg: number;\n}\n\nexport interface Form {\n  name: string;\n  price: number;\n  inStock: boolean;\n  grams: number;\n  dpg: number;\n  size: Size;\n  percentiles: Percentile;\n}\n\n// export enum FormName {\n//   Name7G = \"7g\",\n//   The100G = \"100g\",\n//   The10G = \"10g\",\n//   The120G = \"120g\",\n//   The1Kg = \"1kg\",\n//   The200G = \"200g\",\n//   The250G = \"250g\",\n//   The250GBrickTuoCake = \"250g Brick/Tuo/Cake\",\n//   The25G = \"25g\",\n//   The25GSample = \"25g Sample\",\n//   The357G = \"357g\",\n//   The357GCake = \"357g Cake\",\n//   The360G = \"360g\",\n//   The49G = \"~49g\",\n//   The49GStack = \"49g Stack\",\n//   The50G = \"~50g\",\n//   The7G = \"~7g\",\n//   The7GMini = \"7g Mini\",\n//   The80G = \"80g\",\n// }\n\nexport interface TeaProduct {\n  slug: string;\n  name: string;\n  year: number;\n  quantity: number;\n  description: string;\n  url: string;\n  thumbnailUrl: string;\n  version: string;\n  style: Style;\n  size: Size;\n  images: Images;\n  forms: Form[];\n  tags: string[];\n  owned?: boolean;\n}\n","export const IMAGE_SIZE = 420;\n","import \"./PercentileCircle.scss\";\nimport { getScaleColor, getScaleTextColor } from \"utils/scale\";\n\nexport const PercentileCircle = ({ percentile }: { percentile: number }) => {\n  const style = {\n    left: `${percentile * 2}px`,\n    borderColor: getScaleColor(percentile),\n    color: getScaleTextColor(percentile),\n  };\n\n  const displayed = Math.floor(percentile);\n  return (\n    <span className=\"PercentileCircle\" style={style}>\n      {displayed}\n    </span>\n  );\n};\n","import { useState } from \"react\";\nimport \"./Image.scss\";\n\ninterface Props {\n  src: string;\n  alt: string;\n  width: number | string;\n  height: number | string;\n  loading?: \"eager\" | \"lazy\" | undefined;\n}\nexport const ImagePreLoader = ({ src, alt, width, height }: Props) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  if (!src) {\n    return (\n      <div className=\"TeaImage placeholder responsive\">\n        <div className=\"circle\"></div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <div\n        className={`TeaImage placeholder responsive ${\n          isLoaded ? \"loaded\" : \"loading\"\n        } `}\n      >\n        <div className=\"circle\"></div>\n      </div>\n      <img\n        src={src}\n        alt={alt}\n        width={width}\n        height={height}\n        className={`TeaImage responsive ${isLoaded ? \"loaded\" : \"loading\"} `}\n        onLoad={() => setIsLoaded(true)}\n      />\n    </>\n  );\n};\nexport const Image = ({ src, alt, width, height, loading }: Props) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  if (!src) {\n    return (\n      <div className=\"TeaImage placeholder responsive\">\n        <div className=\"circle\"></div>\n      </div>\n    );\n  }\n  return (\n    <img\n      src={src}\n      alt={alt}\n      width={width}\n      height={height}\n      className={`TeaImage responsive ${isLoaded ? \"loaded\" : \"loading\"} `}\n      onLoad={() => setIsLoaded(true)}\n      loading={loading}\n    />\n  );\n};\n","import { Nav } from \"components/Nav\";\nimport { Empty } from \"Empty\";\nimport { useKeyboardNavigation } from \"hooks/useKeyboardNavigation\";\nimport { lazy, Suspense, useEffect } from \"react\";\nimport {\n  Navigate,\n  Outlet,\n  Route,\n  Routes,\n  useLocation,\n  useSearchParams,\n} from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { personalFilterState } from \"states/personalFilters\";\nimport { sortingState } from \"states/sorting\";\nimport { teasState } from \"states/teas\";\nimport { teaStyleFilteringState } from \"states/teaStyleFiltering\";\nimport { scrollToId } from \"utils/scrollTo\";\nimport \"./App.scss\";\nimport { DetailDrawer } from \"routes/DetailDrawer\";\nimport { Placeholder } from \"components/Placeholder\";\nimport { Search } from \"components/Search\";\n\nconst Cards = lazy(() => import(\"routes/Cards\"));\nconst List = lazy(() => import(\"routes/List\"));\nconst Slices = lazy(() => import(\"routes/Slices\"));\n\nprocess && console.log(`msg: ${process?.env?.REACT_APP_GIT_MSG || \"dev\"}`);\n\nconst Loading = () => {\n  return (\n    <>\n      <Nav />\n      <main className=\"main Loading\">\n        <Placeholder />\n      </main>\n      <DetailDrawer />\n    </>\n  );\n};\n\nfunction App() {\n  const sorting = useRecoilValue(sortingState);\n  const filtering = useRecoilValue(teaStyleFilteringState);\n  const teas = useRecoilValue(teasState);\n  const personal = useRecoilValue(personalFilterState);\n  const [params] = useSearchParams();\n  const location = useLocation();\n\n  const detail = params.get(\"detail\") || \"\";\n\n  useEffect(() => {\n    const state = {\n      sorting,\n      filtering,\n    };\n    const json = JSON.stringify(state);\n    localStorage.setItem(\"state\", json);\n  }, [sorting, filtering]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [sorting, filtering, personal, location.pathname]);\n\n  useEffect(() => {\n    if (detail) scrollToId(detail, 80);\n  }, [detail]);\n\n  useKeyboardNavigation(teas);\n\n  const classes = `app ${detail ? \"detail--open\" : \"\"}`;\n\n  return (\n    <div className={classes}>\n      <Suspense fallback={<Loading />}>\n        <Routes>\n          <Route path=\"/\" element={<Main />}>\n            <Route path=\"cards/:subject\" element={<Cards />} />\n            <Route path=\"slices/:subject\" element={<Slices />} />\n            <Route path=\"list/:subject\" element={<List />} />\n            <Route index element={<Navigate to=\"/cards/wrapperTop\" />} />\n            <Route path=\"*\" element={<Navigate to=\"cards/wrapperTop\" />} />\n          </Route>\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Main = () => {\n  const teas = useRecoilValue(teasState);\n  // const loading = false;\n  // if (loading) return <Loading />;\n  return (\n    <>\n      <Nav />\n      <main id=\"main\">{teas.length ? <Outlet /> : <Empty />}</main>\n      <Search />\n      <DetailDrawer />\n    </>\n  );\n};\n","import \"./Empty.scss\";\n\nexport const Empty = () => <div className=\"Empty\"></div>;\n","import \"./Placeholder.scss\";\n\nexport const Placeholder = () => (\n  <div className={`placeholder`}>\n    <div className=\"circle\"></div>\n  </div>\n);\n","import { atom } from 'recoil';\n\nexport const selectedSlugState = atom({\n  key: 'selectedSlug',\n  default: '',\n});\n","import { useRecoilState } from \"recoil\";\nimport { selectedSlugState } from \"../states/selectedSlug\";\nimport { TeaProduct } from \"../types/TeaProduct\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nexport const getDirection = (\n  direction: string,\n  slug: string,\n  teas: TeaProduct[]\n): string => {\n  if (!slug) return teas[0].slug;\n  const i = teas.findIndex((t) => t.slug === slug);\n  const col = 3;\n  switch (direction) {\n    case \"left\":\n      return teas[i - 1]?.slug || teas[teas.length - 1].slug;\n    case \"right\":\n      return teas[i + 1]?.slug || teas[0].slug;\n    case \"up\":\n      return teas[i - col]?.slug || teas[teas.length - 1].slug;\n    case \"down\":\n      return teas[i + col]?.slug || teas[0].slug;\n    default:\n      return slug;\n  }\n};\n\nexport function useKeyboardNavigation(teas: TeaProduct[]) {\n  const [selectedSlug, setSelectedSlug] = useRecoilState(selectedSlugState);\n  useHotkeys(\n    \"left\",\n    () => setSelectedSlug(getDirection(\"left\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"right\",\n    () => setSelectedSlug(getDirection(\"right\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"up\",\n    () => setSelectedSlug(getDirection(\"up\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"down\",\n    () => setSelectedSlug(getDirection(\"down\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n}\n","import { atom } from \"recoil\";\n\nexport const searchState = atom({\n  key: \"search\",\n  default: \"\",\n});\n","import { useRecoilState, useRecoilValue } from \"recoil\";\nimport { searchState } from \"states/search\";\nimport { allTeasState } from \"states/teas\";\nimport Fuse from \"fuse.js\";\nimport \"./Search.scss\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport const Results = ({ results }: any) => {\n  const [, setSearchParams] = useSearchParams();\n  const [, setSearchString] = useRecoilState(searchState);\n  if (!results.length) return null;\n  return (\n    <div className=\"Results\">\n      {results.map((r: any) => (\n        <button\n          key={r.item.slug}\n          className=\"Result\"\n          onClick={() => {\n            setSearchString(\"\");\n            setSearchParams({ detail: r.item.slug });\n          }}\n        >\n          {r.item.year} {r.item.name}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport const Search = () => {\n  const [searchString, setSearch] = useRecoilState(searchState);\n  const teas = useRecoilValue(allTeasState);\n  const onChange = (e: any) => {\n    setSearch(e.currentTarget.value);\n  };\n  const options = {\n    threshold: 0.2,\n    includeScore: true,\n    isCaseSensitive: false,\n    ignoreLocation: true,\n    keys: [\"slug\"],\n  };\n  const fuse = new Fuse(teas, options);\n  const results = fuse.search(searchString.trim());\n  const relevant = results\n    .sort(\n      (a, b) =>\n        (a.score || 1) - (b.score || 1) ||\n        a.item.year - b.item.year ||\n        b.item.name.length - a.item.name.length ||\n        a.item.name.localeCompare(b.item.name)\n    )\n    .slice(0, 10);\n\n  return (\n    <div className=\"Search\">\n      <Results results={relevant} />\n      <input\n        className=\"SearchInput\"\n        type=\"text\"\n        onChange={onChange}\n        value={searchString}\n        placeholder=\"Search\"\n      />\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport reportWebVitals from \"./utils/reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <BrowserRouter basename=\"/w2tv\">\n        <App />\n      </BrowserRouter>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}