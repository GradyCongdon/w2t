{"version":3,"sources":["states/teas.ts","App.tsx","utils/scrollTop.ts","states/layout.ts","utils/capitalize.ts","components/Selectors/Layout.tsx","components/Selectors/Filtering.tsx","components/Selectors/Personal.tsx","components/Selectors/Sorting.tsx","components/Toggle.tsx","states/whiteBalanced.ts","components/Selectors/Subject.tsx","components/Divider.tsx","components/Heading.tsx","components/Nav.tsx","components/Detail/Description.tsx","components/Detail/LinkButton.tsx","components/Detail/Form.tsx","components/Detail/Table.tsx","components/Detail/Lines.tsx","components/Detail/OwnedButton.tsx","components/Detail/Detail.tsx","utils/formatNumber.ts","routes/DetailDrawer.tsx","components/Stats.tsx","components/TeaProduct/Card.tsx","routes/Cards.tsx","states/selectedSlug.ts","hooks/useKeyboardNavigation.tsx","components/TeaProduct/ListRow.tsx","routes/List.tsx","components/TeaProduct/Slice.tsx","routes/Slices.tsx","types/TeaProduct.ts","states/teaStyleFiltering.ts","states/sorting.ts","states/personalFilters.ts","types/const.ts","utils/reportWebVitals.ts","index.tsx","components/TeaProduct/Image.tsx","states/owned.ts","utils/scrollTo.ts"],"names":["allTeasState","atom","key","default","teaProducts","teasState","selector","get","all","selectedFiltering","teaStyleFilteringState","selectedSorting","sortingState","personalFilter","personalFilterState","owned","ownedState","map","t","isOwned","slug","filter","filteringFunctions","sort","sortingFunctions","process","console","log","App","sorting","useRecoilValue","filtering","teas","useSearchParams","params","location","useLocation","detail","useEffect","state","json","JSON","stringify","localStorage","setItem","scrollTop","scrollToId","pathname","useKeyboardNavigation","className","path","element","Main","index","to","id","offset","setTimeout","elem","document","getElementById","layouts","capitalize","str","toUpperCase","slice","toLowerCase","Selector","layout","subject","useParams","newLocation","search","LayoutSelector","l","Button","useRecoilState","currentFiltering","set","disabled","onClick","FilteringSelector","$Buttons","Object","keys","PersonalSelector","personalFilters","value","Label","icon","getIcon","currentSorting","setSorting","SortingSelector","props","sortings","s","Toggle","label","classes","whiteBalancedState","WhiteBalance","isWhiteBalanced","setIsWhiteBalanced","currentSubject","newSubjectLocation","replace","SubjectSelector","Divider","Heading","children","window","scrollTo","top","behavior","Nav","Description","description","lines","target","source","regex","RegExp","glowTitle","replaceWithGlowHtml","glowText","split","html","shift","join","dangerouslySetInnerHTML","__html","LinkButton","url","href","PriceTable","style","first","second","third","FormPricesTable","form","inStock","price","_name","name","mass","parseInt","tilde","startsWith","nan","Number","isNaN","getMassName","$price","toFixed","$ppg","textDecoration","color","TableHeading","headings","h","scale","Line","percentile","number","Math","floor","scaleIndex","padStart","left","border","LineTable","Lines","forms","teaStyle","length","percentiles","dpg","typeSize","OwnedButton","setOwned","newOwned","Detail","tea","year","quantity","size","IMAGE_SIZE","imageUrl","getImageUrl","images","wrapperTop","thumbnailUrl","fullName","Image","src","alt","width","height","Intl","NumberFormat","format","f","i","Drawer","DetailDrawer","allTeas","setParams","detailSlug","find","Stat","percent","total","round","Stats","styles","groupBy","entries","ts","Card","Cards","$Teas","selectedSlugState","getDirection","direction","findIndex","selectedSlug","setSelectedSlug","useHotkeys","getRandomStyle","rand","min","max","random","ListRow","useMemo","imageStyle","List","Slice","loading","Slices","defaultFilters","getDefaultFilters","useState","filteredSizes","setFilteredSizes","Filters","toggle","TeaSlices","cake","brick","mini","bamboo","unknown","isStyle","x","raw","ripe","white","black","oolong","heicha","includes","huigan","smokey","blend","yiwu","menghai","getName","nameAsc","a","b","localeCompare","maxDPG","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","isLoaded","setIsLoaded","onLoad","stored","getItem","parse","delay","scrollIntoView","block"],"mappings":"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","file":"static/js/main.f904aad3.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nimport teaProducts from \"teaProducts.json\";\nimport {\n  filteringFunctions,\n  teaStyleFilteringState,\n} from \"./teaStyleFiltering\";\nimport { sortingFunctions, sortingState } from \"./sorting\";\nimport { ownedState } from \"./owned\";\nimport { personalFilterState } from \"./personalFilters\";\n\nexport const allTeasState = atom({\n  key: \"allTeas\",\n  default: teaProducts as TeaProduct[],\n});\n\nexport const teasState = selector({\n  key: \"teas\",\n  get: ({ get }) => {\n    const all = get(allTeasState);\n    const selectedFiltering = get(teaStyleFilteringState);\n    const selectedSorting = get(sortingState);\n    const personalFilter = get(personalFilterState);\n    const owned = get(ownedState);\n\n    return all\n      .map((t) => {\n        const isOwned = owned[t.slug];\n        return {\n          ...t,\n          owned: isOwned,\n        };\n      })\n      .filter((t) => {\n        switch (personalFilter) {\n          case \"owned\": {\n            if (!t.owned) return false;\n            break;\n          }\n          case \"all\":\n          default: {\n            break;\n          }\n        }\n        const filter = filteringFunctions[selectedFiltering];\n        return filter(t);\n      })\n      .sort(sortingFunctions[selectedSorting]);\n  },\n});\n","import { Nav } from \"components/Nav\";\nimport { DetailDrawer } from \"routes/DetailDrawer\";\nimport { useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { sortingState } from \"states/sorting\";\nimport { teaStyleFilteringState } from \"states/teaStyleFiltering\";\n\nimport \"./App.scss\";\nimport { useKeyboardNavigation } from \"hooks/useKeyboardNavigation\";\nimport {\n  Routes,\n  Route,\n  Navigate,\n  useSearchParams,\n  Outlet,\n  useLocation,\n} from \"react-router-dom\";\nimport { Cards } from \"routes/Cards\";\nimport { List } from \"routes/List\";\nimport { Slices } from \"routes/Slices\";\nimport { teasState } from \"states/teas\";\nimport { scrollToId } from \"utils/scrollTo\";\nimport { scrollTop } from \"utils/scrollTop\";\n\nprocess && console.log(`msg: ${process.env.REACT_APP_GIT_MSG || \"dev\"}`);\n\nfunction App() {\n  const sorting = useRecoilValue(sortingState);\n  const filtering = useRecoilValue(teaStyleFilteringState);\n  const teas = useRecoilValue(teasState);\n  const [params] = useSearchParams();\n  const location = useLocation();\n\n  const detail = params.get(\"detail\") || \"\";\n\n  useEffect(() => {\n    const state = {\n      sorting,\n      filtering,\n    };\n    const json = JSON.stringify(state);\n    localStorage.setItem(\"state\", json);\n  }, [sorting, filtering]);\n\n  useEffect(() => {\n    scrollTop(\"drawer\");\n    scrollToId(detail, 80);\n  }, [sorting, filtering, detail, location.pathname]);\n\n  useKeyboardNavigation(teas);\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route path=\"/\" element={<Main />}>\n          <Route path=\"cards/:subject\" element={<Cards />} />\n          <Route path=\"slices/:subject\" element={<Slices />} />\n          <Route path=\"list/:subject\" element={<List />} />\n          <Route index element={<Navigate to=\"/cards/wrapperTop\" />} />\n          <Route path=\"*\" element={<Navigate to=\"cards/wrapperTop\" />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Main = () => {\n  const [params] = useSearchParams();\n  const detail = params.get(\"detail\") || \"\";\n  return (\n    <>\n      <Nav />\n      <main id=\"main\" className={detail ? \"detail--open\" : \"\"}>\n        <Outlet />\n      </main>\n      <DetailDrawer />\n    </>\n  );\n};\n","export const scrollTop = (id: string, offset = 0) =>\n  setTimeout(() => {\n    const elem = document.getElementById(id);\n    if (elem) elem.scrollTop = offset;\n  }, 32);\n","import { atom } from \"recoil\";\n\nexport type Layout = \"cards\" | \"list\" | \"slices\";\n\nexport const layouts: Layout[] = [\"cards\", \"slices\", \"list\"];\n\nexport const layoutState = atom({\n  key: \"layout\",\n  default: \"cards\" as Layout,\n});\n","export const capitalize = (str: string) => str[0].toUpperCase() + str.slice(1).toLowerCase();","import { NavLink, useLocation, useParams } from \"react-router-dom\";\nimport { Layout, layouts } from \"states/layout\";\nimport { capitalize } from \"utils/capitalize\";\n\nexport const Selector = ({ layout }: { layout: Layout }) => {\n  const { subject } = useParams();\n  const location = useLocation();\n\n  const newLocation = {\n    pathname: `${layout}/${subject}`,\n    search: location.search,\n  };\n  return (\n    <NavLink className=\"button radio button--layout\" to={newLocation}>\n      <span className=\"label\">{capitalize(layout)}</span>\n    </NavLink>\n  );\n};\n\nexport const LayoutSelector = () => (\n  <>\n    {layouts.map((l) => (\n      <Selector key={l} layout={l} />\n    ))}\n  </>\n);\n","import { useRecoilState } from \"recoil\";\nimport {\n  filteringFunctions,\n  TeaStyleFiltering,\n  teaStyleFilteringState,\n} from \"states/teaStyleFiltering\";\n\nexport const Button = ({ filtering }: { filtering: TeaStyleFiltering }) => {\n  const [currentFiltering, set] = useRecoilState(teaStyleFilteringState);\n  return (\n    <button\n      className=\"button radio button--filter\"\n      disabled={filtering === currentFiltering}\n      onClick={() => set(filtering)}\n    >\n      {filtering}\n    </button>\n  );\n};\n\nexport const FilteringSelector = () => {\n  const $Buttons = Object.keys(filteringFunctions).map((key) => (\n    <Button filtering={key as TeaStyleFiltering} key={key} />\n  ));\n  return <>{$Buttons}</>;\n};\n","import { useRecoilState } from \"recoil\";\nimport {\n  personalFilterState,\n  PersonalFilter,\n  personalFilters,\n} from \"states/personalFilters\";\nimport './Personal.scss';\n\nexport const Button = ({ filtering }: { filtering: PersonalFilter }) => {\n  const [currentFiltering, set] = useRecoilState(personalFilterState);\n  return (\n    <button\n      className=\"button radio button--filter button--personal\"\n      disabled={filtering === currentFiltering}\n      onClick={() => set(filtering)}\n    >\n      {filtering}\n    </button>\n  );\n};\n\nexport const PersonalSelector = () => {\n  const $Buttons = personalFilters.map((value) => (\n    <Button filtering={value as PersonalFilter} key={value} />\n  ));\n  return <>{$Buttons}</>;\n};\n","import { useRecoilState } from \"recoil\";\nimport { Sorting, sortings, sortingState } from \"states/sorting\";\n\nconst getIcon = (value: string) => {\n  switch (value[0]) {\n    case \"+\": {\n      // return '⬈';\n      return \"+\";\n    }\n    case \"-\": {\n      // return '⬊';\n      return \"-\";\n    }\n    default: {\n      return \"?\";\n    }\n  }\n};\n\nconst Label = ({ value }: any) => {\n  const icon = getIcon(value);\n  return (\n    <span className=\"label\">\n      <span className=\"text\">{value.slice(1)}</span>\n      &nbsp;\n      <span className=\"icon--plain\">{icon}</span>\n    </span>\n  );\n};\n\nexport const Button = ({ sorting }: { sorting: Sorting }) => {\n  const [currentSorting, setSorting] = useRecoilState(sortingState);\n  return (\n    <button\n      className=\"button radio button--sort\"\n      disabled={sorting === currentSorting}\n      onClick={() => setSorting(sorting)}\n    >\n      <Label value={sorting} />\n    </button>\n  );\n};\n\nexport const SortingSelector = (props: any) => {\n  const $Buttons = sortings.map((s) => <Button sorting={s} key={s} />);\n  return <>{$Buttons}</>;\n};\n","import { Dispatch, SetStateAction } from \"react\";\n\ninterface ToggleProps {\n  value: boolean;\n  set: Dispatch<SetStateAction<boolean>>;\n  label: string;\n  classes?: string;\n}\n\nexport const Toggle = ({ value, label, set, classes = '' }: ToggleProps) => (\n  <button\n    className={`button toggle ${value ? 'checked' : ''} ${classes}`}\n    onClick={() => set(!value)}\n  >\n    {label}\n  </button>\n);\n","import { atom } from 'recoil';\n\nexport const whiteBalancedState = atom({\n  key: 'whiteBalanced',\n  default: true,\n});\n","import { NavLink, useLocation, useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { Toggle } from \"components/Toggle\";\nimport { whiteBalancedState } from \"states/whiteBalanced\";\nimport { ImageSubject } from \"types/TeaProduct\";\nimport { capitalize } from \"utils/capitalize\";\nimport \"./Subject.scss\";\n\nconst WhiteBalance = () => {\n  const [isWhiteBalanced, setIsWhiteBalanced] =\n    useRecoilState(whiteBalancedState);\n  return (\n    <Toggle\n      value={isWhiteBalanced}\n      set={setIsWhiteBalanced}\n      label=\"wb\"\n      classes=\"WhiteBalance\"\n    />\n  );\n};\n\nconst label = (subject: ImageSubject) => capitalize(subject[0]);\n\nconst Button = ({ subject }: { subject: ImageSubject }) => {\n  const { subject: currentSubject } = useParams();\n  const location = useLocation();\n\n  const newSubjectLocation = currentSubject\n    ? {\n        pathname: location.pathname.replace(currentSubject, subject),\n        search: location.search,\n      }\n    : \"/\";\n  return (\n    <NavLink\n      className={`button radio button--subject `}\n      to={newSubjectLocation}\n      // disabled={currentSubject === subject}\n    >\n      {label(subject)}\n    </NavLink>\n  );\n};\n\nexport const SubjectSelector = () => {\n  const { subject: currentSubject } = useParams();\n  return (\n    <nav className={`subject-selector global`}>\n      <Button subject=\"wrapperTop\" />\n      <Button subject=\"teaTop\" />\n      <div className={`subject--white-balanced ${currentSubject}`}>\n        <WhiteBalance />\n        <Button subject=\"soup\" />\n      </div>\n    </nav>\n  );\n};\n","export const Divider = () => (\n  <>\n    <br />\n    <br />\n  </>\n);\n","export const Heading = ({ children }: any) => (\n  <h1 className=\"heading\" onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>{children}</h1>\n);\n","import { LayoutSelector } from \"components/Selectors/Layout\";\nimport { FilteringSelector } from \"components/Selectors/Filtering\";\nimport { PersonalSelector } from \"components/Selectors/Personal\";\nimport { SortingSelector } from \"components/Selectors/Sorting\";\nimport { SubjectSelector } from \"components/Selectors/Subject\";\nimport { Divider } from \"components/Divider\";\nimport { Heading } from \"components/Heading\";\n\nexport const Nav = () => (\n  <aside className=\"controls--global\">\n    <Heading>w2tv</Heading>\n    <SubjectSelector />\n    <LayoutSelector />\n    <Divider />\n    <SortingSelector />\n    <Divider />\n    <PersonalSelector />\n    <Divider />\n    <FilteringSelector />\n    <Divider />\n  </aside>\n);\n","export function replaceWithGlowHtml(target: string, source: string) {\n  const regex = new RegExp(target, \"g\");\n  const glowTitle = `<span class=\"glow\">${target}</span>`;\n  const descriptionGlow = source.replace(regex, glowTitle);\n  return descriptionGlow;\n}\ntype Props = {\n  description: string;\n  glowText: string;\n};\n\nexport const Description = ({ description, glowText }: Props) => {\n  const descriptionGlow = replaceWithGlowHtml(glowText, description);\n  const lines = descriptionGlow.split(\".\");\n  const html = `\n<p>\n  ${lines.shift()}.\n</p>\n<p>\n  ${lines.join(\". \")}\n</p>\n  `;\n  return (\n    <div className=\"description\" dangerouslySetInnerHTML={{ __html: html }} />\n  );\n};\n","export const LinkButton = ({ url }: { url: string }) => {\n  return (\n    <a className=\"DetailButton Link\" href={url}>\n      <span className=\"value\">🔗</span>\n    </a>\n  );\n};\n","import * as TeaProduct from \"types/TeaProduct\";\nimport \"./Table.scss\";\nimport \"./Form.scss\";\n\nconst PriceTable = ({ style, first, second, third }: any) => (\n  <div style={style} className=\"Table table\">\n    <h2>{first}</h2>\n    <h3>{second}</h3>\n    <h4>{third}</h4>\n  </div>\n);\n\ntype Props = {\n  form: TeaProduct.Form;\n  style: string;\n  index: number;\n};\n\nexport const FormPricesTable = ({ form, style: teaStyle, index }: Props) => {\n  const { inStock, price } = form;\n\n  var { nan, mass, name } = getMassName(form);\n  const $price = \"$\" + price.toFixed(2);\n  const $ppg = nan ? \"$?\" : \"$\" + (price / mass).toFixed(2);\n\n  const style = {\n    textDecoration: inStock ? \"none\" : \"line-through\",\n    color: inStock ? \"inherit\" : \"var(--grey-medium)\",\n  };\n\n  return (\n    <div className=\"FormPricesTable\">\n      <PriceTable style={style} first={name} second={$price} third={$ppg} />\n    </div>\n  );\n};\n\nexport const FormPercentileTable = ({ form }: Props) => {\n  const { inStock, percentiles } = form;\n\n  const style = {\n    textDecoration: inStock ? \"none\" : \"line-through\",\n    color: inStock ? \"inherit\" : \"var(--grey-medium)\",\n  };\n  const all = getNumberWithOrdinal(percentiles.all);\n  const dpg = getNumberWithOrdinal(percentiles.dpg);\n\n  return (\n    <div style={style} className=\"Percentile table table--fit\">\n      <h5>percentile</h5>\n      <h3>\n        {all.number}\n        <sup>{all.ordinal}</sup>\n      </h3>\n      <h3>\n        {dpg.number}\n        <sup>{dpg.ordinal}</sup>\n      </h3>\n    </div>\n  );\n};\n\nfunction getMassName(form: TeaProduct.Form) {\n  const { name: _name } = form;\n  let mass = parseInt(_name.replace(/\\D/g, \"\"), 10);\n  if (mass === 1) mass = 1000;\n  const tilde = _name.startsWith(\"~\") ? \"~\" : \"\";\n  const nan = Number.isNaN(mass);\n  const name = nan ? \"?\" : `${tilde}${mass}g`;\n  return { nan, mass, name };\n}\n\nconst suffix = [\"th\", \"st\", \"nd\", \"rd\"];\nfunction getNumberWithOrdinal(_number: number) {\n  const number = Math.round(_number);\n  const v = number % 100;\n  const ordinal = suffix[(v - 20) % 10] || suffix[v] || suffix[0];\n  return {\n    number,\n    ordinal,\n  };\n}\n","import \"./Table.scss\";\n\ntype Props = {\n  headings: string[];\n};\n\nexport const TableHeading = ({ headings }: Props) => (\n  <div className=\"TableHeading table table--fit\">\n    {headings.map((h) => (\n      <span key={h}>{h}</span>\n    ))}\n  </div>\n);\n","import { Form, Style } from \"types/TeaProduct\";\nimport \"./Lines.scss\";\n\nconst scale = [\n  \"#ffe6cb\",\n  \"#ffe3af\",\n  \"#ffc58a\",\n  \"#ffa474\",\n  \"#fa8366\",\n  \"#ed635c\",\n  \"#db4551\",\n  \"#c52840\",\n  \"#aa0e27\",\n  \"#8b0000\",\n];\n\nexport const Line = ({ percentile }: { percentile: number }) => {\n  const number = Math.floor(percentile);\n  const scaleIndex = +number.toFixed(0).padStart(2, \"0\")[0];\n  const style = {\n    left: `${number * 2}px`,\n    border: `2px solid ${scale[scaleIndex]}`,\n    color: number <= 30 ? \"rgb(197, 134, 42)\" : scale[scaleIndex],\n  };\n  return (\n    <div className=\"Line\">\n      <span className=\"Label\" style={style}>\n        {number}\n      </span>\n    </div>\n  );\n};\n\nexport const LineTable = ({\n  label,\n  percentile,\n}: {\n  label: string;\n  percentile: number;\n}) => {\n  return (\n    <div className=\"Percentile table \">\n      <h5>{label}</h5>\n      <Line percentile={percentile} />\n    </div>\n  );\n};\n\nexport const Lines = ({\n  forms,\n  teaStyle,\n}: {\n  forms: Form[];\n  teaStyle: Style;\n}) => {\n  if (!forms.length) return null;\n  const { percentiles } = forms[0];\n  const { dpg, typeSize } = percentiles;\n  return (\n    <div className=\"Lines\">\n      <LineTable label={\"overall\"} percentile={dpg} />\n      <LineTable label={`${teaStyle}`} percentile={typeSize} />\n      <div className=\"LabelWrapper\">\n        <span className=\"LinesLabel\">cost percentile</span>\n      </div>\n    </div>\n  );\n};\n","import { useRecoilState } from \"recoil\";\nimport { ownedState } from \"states/owned\";\n\nexport const OwnedButton = ({ slug }: { slug: string }) => {\n  const [owned, setOwned] = useRecoilState(ownedState);\n  const isOwned = owned[slug];\n  const toggleOwned = () => {\n    const newOwned = {\n      ...owned,\n      [slug]: !isOwned,\n    };\n    setOwned(newOwned);\n    localStorage.setItem(\"owned\", JSON.stringify(newOwned));\n  };\n  return (\n    <button\n      className={`DetailButton Owned ${isOwned ? \"isOwned\" : \"\"}`}\n      onClick={toggleOwned}\n    >\n      <span className=\"value\">💸</span>\n    </button>\n  );\n};\n","import { getImageUrl, TeaProduct } from \"types/TeaProduct\";\nimport { Image } from \"components/TeaProduct/Image\";\nimport { Description } from \"./Description\";\nimport { LinkButton } from \"./LinkButton\";\nimport \"./Detail.scss\";\nimport { FormPricesTable } from \"./Form\";\nimport { IMAGE_SIZE } from \"types/const\";\nimport { TableHeading } from \"./Table\";\nimport { Lines } from \"./Lines\";\nimport { formatNumber } from \"utils/formatNumber\";\nimport { OwnedButton } from \"./OwnedButton\";\n\ntype Props = {\n  tea: TeaProduct;\n};\n\nexport const Detail = ({ tea }: Props) => {\n  const { year, name, description, url, forms, style, quantity, slug } = tea;\n  const size = IMAGE_SIZE;\n  const imageUrl = getImageUrl(tea.images.wrapperTop || tea.thumbnailUrl, size);\n  const fullName = `${year} ${name}`;\n\n  return (\n    <article className=\"TeaDetail\">\n      <h1 className=\"title glow\">{fullName}</h1>\n      <Image src={imageUrl} alt={name} width={size} height={size} />\n      <p className=\"quantity\">{formatNumber(quantity)}</p>\n      {!forms.length ? null : (\n        <TableHeading headings={[\"Size\", \"Price\", \"$ / g\"]} />\n      )}\n      {forms.map((f, i) => (\n        <FormPricesTable key={f.name} index={i} form={f} style={style} />\n      ))}\n      <Lines forms={forms} teaStyle={style} />\n      <Description glowText={fullName} description={description} />\n      <LinkButton url={url} />\n      <OwnedButton slug={slug} />\n    </article>\n  );\n};\n","export const formatNumber = (number: number) =>\n  new Intl.NumberFormat(\"en-us\").format(number);\n","import { Detail } from \"components/Detail/Detail\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { allTeasState } from \"states/teas\";\nimport { scrollToId } from \"utils/scrollTo\";\nimport \"./DetailDrawer.scss\";\n\n// const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const Error = ({ slug }: any) => {\n  return (\n    <>\n      <h1>error</h1>\n      <h1>{slug}</h1>\n    </>\n  );\n};\n\nexport const Skeleton = () => {\n  return <div className=\"skeleton\"></div>;\n};\nexport const Drawer = ({ classes, children }: any) => (\n  <aside className={classes} id=\"drawer\">\n    {children}\n  </aside>\n);\n\nexport const DetailDrawer = () => {\n  const allTeas = useRecoilValue(allTeasState);\n  const [params, setParams] = useSearchParams();\n  const detailSlug = params.get(\"detail\");\n  const classes = `drawer ${detailSlug ? \"open\" : \"closed\"}`;\n\n  if (!detailSlug) return <Drawer classes={classes} />;\n  const tea = allTeas.find((t) => t.slug === detailSlug);\n  if (!tea) return null;\n\n  const resetSelected = () => {\n    scrollToId(detailSlug);\n    setParams({});\n  };\n\n  return (\n    <Drawer classes={classes}>\n      <button className=\"DetailButton Close\" onClick={resetSelected}>\n        <span className=\"value\">&times;</span>\n      </button>\n      <Detail tea={tea} />\n    </Drawer>\n  );\n};\n","import { useRecoilValue } from \"recoil\";\nimport { personalFilterState } from \"states/personalFilters\";\nimport { teasState } from \"states/teas\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport \"./Stats.scss\";\n\nexport const Stat = ({ name, size, total }: any) => {\n  const percent = (size / total) * 100;\n  const style = {\n    width: percent + \"%\",\n  };\n  return (\n    <div style={style} className={`Stat ${name}`}>\n      {name} {Math.round(percent)}%\n    </div>\n  );\n};\n\nexport const Stats = () => {\n  const personalFilter = useRecoilValue(personalFilterState);\n  const teas = useRecoilValue(teasState);\n\n  if (personalFilter !== \"owned\") return null;\n  const styles = groupBy(\"style\", teas);\n\n  return (\n    <div className=\"Stats\">\n      {Object.entries(styles).map(([s, ts]) => (\n        <Stat key={s} name={s} size={ts.length} total={teas.length} />\n      ))}\n    </div>\n  );\n};\n","import { getImageUrl, ImageSubject, TeaProduct } from \"types/TeaProduct\";\nimport { Image } from \"./Image\";\nimport \"./Card.scss\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { IMAGE_SIZE } from \"types/const\";\n\nexport type Props = {\n  tea: TeaProduct;\n  subject: ImageSubject;\n};\n\nexport const Card = ({ tea, subject }: Props) => {\n  const [params, setParams] = useSearchParams();\n  const detailSlug = params.get(\"detail\");\n\n  const { year, name, slug, owned } = tea;\n  const setSelected = () =>\n    setParams({\n      detail: slug,\n    });\n\n  const imageUrl = tea.images[subject];\n  const size = IMAGE_SIZE;\n\n  const isSelected = detailSlug === slug;\n  const classes = `TeaCard ${isSelected ? \"selected\" : \"\"} ${\n    owned ? \"owned\" : \"\"\n  }`;\n\n  return (\n    <figure className={classes} onClick={setSelected} id={slug}>\n      <div className=\"content\">\n        <div className=\"icon\"></div>\n        <h3 className=\"year glow\">{year}</h3>\n        <h2 className=\"name\">{name}</h2>\n        <Image\n          src={getImageUrl(imageUrl || \"\", size)}\n          alt={name}\n          width={size}\n          height={size}\n        />\n      </div>\n    </figure>\n  );\n};\n","import { Stats } from \"components/Stats\";\nimport { Card } from \"components/TeaProduct/Card\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { teasState } from \"states/teas\";\nimport { ImageSubject } from \"types/TeaProduct\";\nimport \"./Cards.scss\";\n\nexport const Cards = () => {\n  const { subject } = useParams();\n  const teas = useRecoilValue(teasState);\n\n  const $Teas = teas.map((tea) => (\n    <Card\n      key={tea.slug}\n      tea={tea}\n      subject={(subject as ImageSubject) || \"wrapperTop\"}\n    />\n  ));\n  return (\n    <>\n      <Stats />\n      <section className=\"TeaCards\">{$Teas}</section>\n    </>\n  );\n};\n","import { atom } from 'recoil';\n\nexport const selectedSlugState = atom({\n  key: 'selectedSlug',\n  default: '',\n});\n","import { useRecoilState } from \"recoil\";\nimport { selectedSlugState } from \"../states/selectedSlug\";\nimport { TeaProduct } from \"../types/TeaProduct\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nexport const getDirection = (\n  direction: string,\n  slug: string,\n  teas: TeaProduct[]\n): string => {\n  if (!slug) return teas[0].slug;\n  const i = teas.findIndex((t) => t.slug === slug);\n  const col = 3;\n  switch (direction) {\n    case \"left\":\n      return teas[i - 1]?.slug || teas[teas.length - 1].slug;\n    case \"right\":\n      return teas[i + 1]?.slug || teas[0].slug;\n    case \"up\":\n      return teas[i - col]?.slug || teas[teas.length - 1].slug;\n    case \"down\":\n      return teas[i + col]?.slug || teas[0].slug;\n    default:\n      return slug;\n  }\n};\n\nexport function useKeyboardNavigation(teas: TeaProduct[]) {\n  const [selectedSlug, setSelectedSlug] = useRecoilState(selectedSlugState);\n  useHotkeys(\n    \"left\",\n    () => setSelectedSlug(getDirection(\"left\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"right\",\n    () => setSelectedSlug(getDirection(\"right\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"up\",\n    () => setSelectedSlug(getDirection(\"up\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"down\",\n    () => setSelectedSlug(getDirection(\"down\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n}\n","import { useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getImageUrl, TeaProduct } from \"types/TeaProduct\";\nimport \"./ListRow.scss\";\n\nconst getRandomStyle = () => {\n  const rand = (min: number, max: number) => Math.random() * (max - min) + min;\n  const left = rand(10, 80);\n  const top = rand(0, 60);\n  const size = rand(100, 400);\n  return { size, top, left };\n};\n\nexport const ListRow = ({ tea }: { tea: TeaProduct }) => {\n  const [params, setParams] = useSearchParams();\n  const { size, top, left } = useMemo(getRandomStyle, [tea.slug]);\n\n  const { year, name, slug, style, thumbnailUrl } = tea;\n  const detailSlug = params.get(\"detail\");\n\n  const setSelected = () =>\n    setParams({\n      detail: slug,\n    });\n\n  const isSelected = detailSlug === slug;\n  const classes = `ListText ${isSelected ? \"selected glow\" : \"\"}`;\n  const url = getImageUrl(thumbnailUrl, size);\n  const imageStyle = {\n    top: `${top}vh`,\n    left: `${left}vw`,\n    width: `${size}px`,\n    height: `${size}px`,\n  };\n\n  return (\n    <div className={classes} onClick={setSelected} id={slug}>\n      <span className=\"year\">{year} </span>\n      <span className=\"name\">{name} </span>\n      <span className=\"style\"> {style}</span>\n      <img src={url} width={size} height={size} alt={name} style={imageStyle} />\n    </div>\n  );\n};\n","import { useRecoilValue } from \"recoil\";\nimport { teasState } from \"states/teas\";\nimport { ListRow } from \"components/TeaProduct/ListRow\";\nimport \"./List.scss\";\n\nexport const List = () => {\n  const teas = useRecoilValue(teasState);\n\n  return (\n    <div className=\"List\">\n      {teas.map((t) => (\n        <ListRow key={t.slug} tea={t} />\n      ))}\n    </div>\n  );\n};\n","import { useSearchParams } from \"react-router-dom\";\nimport { IMAGE_SIZE } from \"types/const\";\nimport { getImageUrl, ImageSubject, TeaProduct } from \"types/TeaProduct\";\nimport \"./Slice.scss\";\n\ninterface TeaSliceProps {\n  tea: TeaProduct;\n  subject: ImageSubject;\n}\n\nexport const Slice = ({ tea, subject }: TeaSliceProps) => {\n  const [params, setParams] = useSearchParams();\n  const detailSlug = params.get(\"detail\");\n\n  const { year, name, slug } = tea;\n  const setSelected = () =>\n    setParams({\n      detail: slug,\n    });\n\n  const imageUrl = tea.images[subject];\n  const size = IMAGE_SIZE;\n\n  const isSelected = detailSlug === slug;\n  const classes = `TeaSliceWrapper ${\n    isSelected ? \"selected\" : \"\"\n  } ${subject} ${size}`;\n\n  return (\n    <span className={classes} onClick={setSelected} id={slug}>\n      {imageUrl && (\n        <img\n          src={getImageUrl(imageUrl, size)}\n          alt={name}\n          width={size}\n          height={size}\n          className=\"TeaSlice\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"TeaSliceInfoWrapper\">\n        <div className=\"TeaSliceInfo glow\">\n          <span>{year}</span>\n          <span>{name}</span>\n        </div>\n      </div>\n    </span>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { teasState } from \"states/teas\";\nimport { ImageSubject } from \"types/TeaProduct\";\nimport { Slice } from \"components/TeaProduct/Slice\";\nimport \"./Slices.scss\";\n\nexport const Slices = () => {\n  const teas = useRecoilValue(teasState);\n  const params = useParams();\n  const subject = params.subject as ImageSubject;\n\n  const defaultFilters = getDefaultFilters(subject);\n  const [filteredSizes, setFilteredSizes] = useState(defaultFilters);\n\n  useEffect(() => {\n    setFilteredSizes(getDefaultFilters(subject));\n  }, [subject]);\n\n  const toggle = (size: any) => ({\n    ...filteredSizes,\n    [size]: !filteredSizes[size] as boolean,\n  });\n\n  const Filters = Object.keys(defaultFilters).map((size) => (\n    <button\n      key={size}\n      className={`button toggle ${filteredSizes[size] ? \"checked\" : \"\"}`}\n      onClick={() => setFilteredSizes(toggle(size))}\n    >\n      {size}\n    </button>\n  ));\n\n  const TeaSlices = teas\n    .filter((t) => filteredSizes[t.size])\n    .map((t) => <Slice key={t.slug} tea={t} subject={subject} />);\n\n  return (\n    <>\n      <nav className=\"TeaSliceFilters\">{Filters}</nav>\n      <div className=\"TeaSlices\">{TeaSlices}</div>\n    </>\n  );\n};\n\nexport const getDefaultFilters = (subject: ImageSubject) =>\n  ({\n    cake: true,\n    brick: true,\n    mini: subject === \"wrapperTop\" ? false : true,\n    bamboo: subject === \"wrapperTop\" ? false : true,\n    unknown: subject === \"soup\" ? true : false,\n    // brick: subject === \"wrapperTop\" ? false : true,\n    // mini: subject === \"wrapperTop\" ? false : true,\n  } as any);\n","export type Style =\n  | \"white\"\n  | \"green\"\n  | \"black\"\n  | \"hongcha\"\n  | \"raw\"\n  | \"ripe\"\n  | \"oolong\"\n  | \"huangpian\"\n  | \"unknown\";\n\nexport type Size =\n  | \"cake\"\n  | \"mini\"\n  | \"bamboo\"\n  | \"square\"\n  | \"brick\"\n  | \"ball\"\n  | \"sample\"\n  | \"unknown\";\n\nexport type ImageSubject =\n  | \"leaf\"\n  | \"soup\"\n  | \"teaBottom\"\n  | \"teaDetail\"\n  | \"teaTop\"\n  | \"tong\"\n  | \"chabu\"\n  | \"shirt\"\n  | \"wrapperBottom\"\n  | \"wrapperDetail\"\n  | \"wrapperTop\";\n\nexport const getImageUrl = (url: string, size: number): string =>\n  url.replace(\"SIZEx\", `${size}x`);\n\nexport type Images = Partial<Record<ImageSubject, string>>;\n\nexport interface Percentile {\n  size: number;\n  type: number;\n  typeSize: number;\n  all: number;\n  dpg: number;\n}\n\nexport interface Form {\n  name: string;\n  price: number;\n  inStock: boolean;\n  grams: number;\n  dpg: number;\n  size: Size;\n  percentiles: Percentile;\n}\n\n// export enum FormName {\n//   Name7G = \"7g\",\n//   The100G = \"100g\",\n//   The10G = \"10g\",\n//   The120G = \"120g\",\n//   The1Kg = \"1kg\",\n//   The200G = \"200g\",\n//   The250G = \"250g\",\n//   The250GBrickTuoCake = \"250g Brick/Tuo/Cake\",\n//   The25G = \"25g\",\n//   The25GSample = \"25g Sample\",\n//   The357G = \"357g\",\n//   The357GCake = \"357g Cake\",\n//   The360G = \"360g\",\n//   The49G = \"~49g\",\n//   The49GStack = \"49g Stack\",\n//   The50G = \"~50g\",\n//   The7G = \"~7g\",\n//   The7GMini = \"7g Mini\",\n//   The80G = \"80g\",\n// }\n\nexport interface TeaProduct {\n  slug: string;\n  name: string;\n  year: number;\n  quantity: number;\n  description: string;\n  url: string;\n  thumbnailUrl: string;\n  version: string;\n  style: Style;\n  size: Size;\n  images: Images;\n  forms: Form[];\n  tags: string[];\n  owned?: boolean;\n}\n","import { atom } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nexport type TeaStyleFiltering =\n  | \"all\"\n  | \"raw\"\n  | \"ripe\"\n  | \"white\"\n  | \"black\"\n  | \"oolong\"\n  | \"bamboo\"\n  | \"heicha\"\n  | \"sun dried\"\n  | \"shade dried\"\n  | \"smokey\"\n  | \"huigan\"\n  | \"blend\"\n  | \"yiwu\"\n  | \"menghai\"\n  | \"low stock\"\n  | \"rle low stock\";\n\nexport const teaStyleFilteringState = atom({\n  key: \"teaStyleFilter\",\n  default: \"all\" as TeaStyleFiltering,\n});\n\nconst isStyle = (s: TeaStyleFiltering) => (x: TeaProduct) => x.style === s;\nconst identity = (x: TeaProduct) => true;\n\ntype TeaStyleFilteringMap = {\n  [key in TeaStyleFiltering]: (a: TeaProduct) => boolean;\n};\n\nexport const filteringFunctions: TeaStyleFilteringMap = {\n  all: identity,\n  raw: isStyle(\"raw\"),\n  ripe: isStyle(\"ripe\"),\n  white: isStyle(\"white\"),\n  black: isStyle(\"black\"),\n  oolong: isStyle(\"oolong\"),\n  bamboo: (t: TeaProduct) => t.size === \"bamboo\",\n  heicha: (t: TeaProduct) => t.description.includes(\"heicha\"),\n  \"sun dried\": (t: TeaProduct) => t.description.includes(\"sun dried\"),\n  \"shade dried\": (t: TeaProduct) => t.description.includes(\"shade dried\"),\n  huigan: (t: TeaProduct) => t.description.includes(\"huigan\"),\n  smokey: (t: TeaProduct) => t.description.includes(\"smoke\"),\n  blend: (t: TeaProduct) => t.description.includes(\"blend\"),\n  yiwu: (t: TeaProduct) => t.description.includes(\"Yiwu\"),\n  menghai: (t: TeaProduct) => t.description.includes(\"Menghai\"),\n  \"low stock\": (t: TeaProduct) => t.quantity < 100 && t.quantity > 0,\n  \"rle low stock\": (t: TeaProduct) => t.quantity < 20 && t.quantity > 0,\n  // TODO add data, then re-enable\n  // 'green': isStyle(TeaStyle.Green),\n  // 'unknown': isStyle(TeaStyle.Unknown),\n};\n","import { atom } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nexport type Sorting = \"-year\" | \"+year\" | \"+name\" | \"-name\" | \"+cost\" | \"-cost\";\nexport const sortings: Sorting[] = [\n  \"-year\",\n  \"+year\",\n  \"-name\",\n  \"+name\",\n  \"-cost\",\n  \"+cost\",\n];\n\nexport const sortingState = atom({\n  key: \"sorting\",\n  default: \"-year\" as Sorting,\n});\n\nconst getName = (x: TeaProduct) => x.name.replace(\"The \", \"\");\n\nconst nameDesc = (a: TeaProduct, b: TeaProduct) =>\n  getName(b).localeCompare(getName(a)) || b.year - a.year;\nconst nameAsc = (a: TeaProduct, b: TeaProduct) =>\n  getName(a).localeCompare(getName(b)) || a.year - b.year;\n\nconst yearDesc = (a: TeaProduct, b: TeaProduct) =>\n  b.year - a.year || nameAsc(a, b);\nconst yearAsc = (a: TeaProduct, b: TeaProduct) =>\n  a.year - b.year || nameAsc(a, b);\n\nconst maxDPG = (x: TeaProduct): number =>\n  Math.max(...x.forms.map((x) => x.dpg));\n\nconst costDesc = (a: TeaProduct, b: TeaProduct) =>\n  maxDPG(b) - maxDPG(a) || nameAsc(a, b);\nconst costAsc = (a: TeaProduct, b: TeaProduct) =>\n  maxDPG(a) - maxDPG(b) || nameAsc(a, b);\n\ntype SortingFunctionMap = {\n  [key in Sorting]: (a: TeaProduct, b: TeaProduct) => number;\n};\n\nexport const sortingFunctions: SortingFunctionMap = {\n  \"-year\": yearDesc,\n  \"+year\": yearAsc,\n  \"-name\": nameDesc,\n  \"+name\": nameAsc,\n  \"-cost\": costDesc,\n  \"+cost\": costAsc,\n};\n","import { atom } from \"recoil\";\n\nexport const personalFilters = [\"all\", \"owned\"] as const;\nexport type PersonalFilter = typeof personalFilters[number];\n\nexport const personalFilterState = atom({\n  key: \"personalFilter\",\n  default: \"all\" as PersonalFilter,\n});\n","export const IMAGE_SIZE = 420;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport reportWebVitals from \"./utils/reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <BrowserRouter basename=\"/w2tv\">\n        <App />\n      </BrowserRouter>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { useState } from \"react\";\nimport \"./Image.scss\";\n\ninterface Props {\n  src: string;\n  alt: string;\n  width: number | string;\n  height: number | string;\n}\nexport const ImagePreLoader = ({ src, alt, width, height }: Props) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  if (!src) {\n    return (\n      <div className=\"TeaImage placeholder responsive\">\n        <div className=\"circle\"></div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <div\n        className={`TeaImage placeholder responsive ${\n          isLoaded ? \"loaded\" : \"loading\"\n        } `}\n      >\n        <div className=\"circle\"></div>\n      </div>\n      <img\n        src={src}\n        alt={alt}\n        width={width}\n        height={height}\n        className={`TeaImage responsive ${isLoaded ? \"loaded\" : \"loading\"} `}\n        onLoad={() => setIsLoaded(true)}\n      />\n    </>\n  );\n};\nexport const Image = ({ src, alt, width, height }: Props) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  if (!src) {\n    return (\n      <div className=\"TeaImage placeholder responsive\">\n        <div className=\"circle\"></div>\n      </div>\n    );\n  }\n  return (\n    <img\n      src={src}\n      alt={alt}\n      width={width}\n      height={height}\n      className={`TeaImage responsive ${isLoaded ? \"loaded\" : \"loading\"} `}\n      onLoad={() => setIsLoaded(true)}\n    />\n  );\n};\n","import { atom } from \"recoil\";\n\nconst stored = localStorage.getItem(\"owned\");\nconst owned = stored ? JSON.parse(stored) : {};\n\ntype OwnedMap = {\n  [key: string]: boolean;\n};\n\nexport const ownedState = atom({\n  key: \"owned\",\n  default: owned as OwnedMap,\n});\n","export const scrollToId = (id: string, delay = 100) =>\n  setTimeout(() => {\n    const elem = document.getElementById(id);\n    if (elem) elem.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    else\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: \"smooth\",\n      });\n  }, delay);\n"],"sourceRoot":""}