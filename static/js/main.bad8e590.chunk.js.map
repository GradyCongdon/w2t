{"version":3,"sources":["states/selectedSlug.ts","states/view.ts","states/whiteBalanced.ts","types/TeaProduct.ts","components/TeaProduct/Image.tsx","components/TeaProduct/Card.tsx","components/TeaProduct/List.tsx","components/TeaProduct/Slice.tsx","hooks/useKeyboardNavigation.tsx","states/layout.ts","states/sorting.ts","states/teaStyleFiltering.ts","states/teas.ts","utils/scrollTo.ts","components/Main.tsx","utils/capitalize.ts","components/Selectors/Layout.tsx","components/Selectors/Filtering.tsx","components/Selectors/Sorting.tsx","components/Toggle.tsx","components/Selectors/View.tsx","components/Divider.tsx","components/Heading.tsx","components/Nav.tsx","components/TeaProduct/Detail.tsx","App.tsx","utils/reportWebVitals.ts","index.tsx"],"names":["selectedSlugState","atom","key","default","viewState","whiteBalancedState","getImageSubject","view","size","tea","image","images","find","i","subject","url","alt","name","src","replace","toString","width","height","type","srcWhiteBalanced","Image","className","Cards","$Teas","teas","map","slug","Card","useRecoilState","viewGlobal","selectedSlug","setSelectedSlug","useState","setView","useEffect","year","oSlug","classes","onClick","id","TeaTableRow","style","List","t","Slice","useRecoilValue","getDefaultFilters","cake","brick","square","mini","ball","bamboo","Slices","defaultFilters","filteredSizes","setFilteredSizes","TeaSlices","filter","Filters","Object","keys","toggle","getDirection","direction","findIndex","length","layouts","layoutState","sortings","sortingState","getName","x","nameAsc","a","b","localeCompare","maxDPG","Math","max","forms","dpg","sortingFunctions","teaStyleFilteringState","isStyle","s","filteringFunctions","all","raw","ripe","white","black","oolong","allTeasState","teaProducts","teasState","selector","get","filtering","sorting","sort","scrollToId","delay","setTimeout","document","getElementById","scrollIntoView","behavior","block","LayoutView","Main","layout","useHotkeys","useKeyboardNavigation","capitalize","str","toUpperCase","slice","toLowerCase","Selector","currentLayout","setLayout","disabled","LayoutSelector","l","Button","currentFitlering","set","FilteringSelector","$Buttons","Label","value","icon","getIcon","currentSorting","setSorting","SortingSelector","props","Toggle","label","WhiteBalance","isWhiteBalanced","setIsWhiteBalanced","currentView","ViewSelector","Divider","Heading","children","window","scrollTo","top","Nav","sunday","product_id","title","description","brand","offers","offer_id","sku","price","currency_code","in_stock","thumbnail_url","provider","version","Error","Offer","offer","mass","parseInt","tilde","startsWith","textDecoration","color","nan","Number","isNaN","$size","$price","toFixed","$ppg","OfferHeading","DetailContent","detail","titleRegExp","RegExp","glowTitle","descriptionGlow","o","dangerouslySetInnerHTML","__html","href","Skeleton","TeaDetail","status","setStatus","setDetail","fetch","res","json","oembed","useDetail","Detail","console","log","process","App","whiteBalanced","state","JSON","stringify","localStorage","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","debug"],"mappings":"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","file":"static/js/main.bad8e590.chunk.js","sourcesContent":["import { atom } from 'recoil';\n\nexport const selectedSlugState = atom({\n  key: 'selectedSlug',\n  default: '',\n});\n","import { atom } from \"recoil\";\nimport { ImageSubject } from \"types/FullTea\";\n\nexport type View = ImageSubject;\nexport const views: View[] = [\n  \"leaf\",\n  \"soup\",\n  \"tea-bottom\",\n  \"tea-detail\",\n  \"tea-top\",\n  \"tong\",\n  \"chabu\",\n  \"shirt\",\n  \"wrapper-bottom\",\n  \"wrapper-detail\",\n  \"wrapper-top\",\n];\n\nexport const viewState = atom({\n  key: \"view\",\n  default: \"wrapper-top\" as View,\n});\n","import { atom } from 'recoil';\n\nexport const whiteBalancedState = atom({\n  key: 'whiteBalanced',\n  default: true,\n});\n","// import { Form, ImageFull } from \"./FullTea.ts\";\nimport { Form, ImageFull, ImageSubject } from \"./FullTea\";\n\nexport interface TeaImage {\n  type: ImageSubject;\n  src: string;\n  srcWhiteBalanced: string;\n  alt: string;\n  width: number;\n  height: number;\n}\n\nconst defaultImage = (subject: ImageSubject) => ({\n  url: \"\",\n  subject,\n});\n\nexport function getImageSubject(\n  view: ImageSubject,\n  size: number,\n  tea: TeaProduct\n): TeaImage {\n  const image =\n    tea.images.find((i) => i.subject === view) || defaultImage(view);\n  return {\n    alt: tea.name,\n    src: image.url.replace(\"SIZE\", size.toString()),\n    width: size,\n    height: size,\n    type: image.subject || view,\n    srcWhiteBalanced: image.url,\n  };\n}\n\nexport type TeaStyle =\n  | \"white\"\n  | \"green\"\n  | \"black\"\n  | \"hongcha\"\n  | \"raw\"\n  | \"ripe\"\n  | \"oolong\"\n  | \"huangpian\"\n  | \"unknown\";\n\nexport type TeaSize =\n  | \"cake\"\n  | \"mini\"\n  | \"bamboo\"\n  | \"square\"\n  | \"brick\"\n  | \"ball\"\n  | \"sample\"\n  | \"unknown\";\n\nexport interface TeaProduct {\n  slug: string;\n  oSlug: string;\n  year: number;\n  style: TeaStyle;\n  name: string;\n  size: TeaSize;\n  wrapper: TeaImage;\n  bing: TeaImage;\n  soup: TeaImage;\n  description: string;\n  images: ImageFull[];\n  forms: Form[];\n}\n\nexport interface EntryProps {\n  tea: TeaProduct;\n}\n\nexport interface ArrayProps {\n  teas: TeaProduct[];\n}\n","import \"./Image.scss\";\n\ninterface Props {\n  src: string;\n  alt: string;\n  width: number | string;\n  height: number | string;\n}\nexport const Image = ({ src, alt, width, height }: Props) => {\n  if (!src) {\n    return (\n      <div className=\"TeaImage placeholder responsive\">\n        <div className=\"circle\"></div>\n      </div>\n    );\n  }\n  return (\n    <img\n      src={src}\n      alt={alt}\n      width={width}\n      height={height}\n      className=\"TeaImage responsive\"\n    />\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { selectedSlugState } from \"states/selectedSlug\";\nimport { viewState } from \"states/view\";\nimport { whiteBalancedState } from \"states/whiteBalanced\";\nimport { TeaProduct, getImageSubject } from \"types/TeaProduct\";\nimport { Image } from \"./Image\";\nimport \"./Card.scss\";\n\ninterface TeasProps {\n  teas: TeaProduct[];\n}\nexport const Cards = ({ teas }: TeasProps) => {\n  const $Teas = teas.map((tea) => <Card key={tea.slug} tea={tea} />);\n  return <section className=\"TeaCards\">{$Teas}</section>;\n};\n\nexport type Props = {\n  tea: TeaProduct;\n};\n\nexport const Card = ({ tea }: Props) => {\n  const [viewGlobal] = useRecoilState(viewState);\n  const [selectedSlug, setSelectedSlug] = useRecoilState(selectedSlugState);\n  const [whiteBalanced] = useRecoilState(whiteBalancedState);\n  const [view, setView] = useState(viewGlobal);\n\n  useEffect(() => {\n    setView(viewGlobal);\n  }, [viewGlobal]);\n\n  const { year, name, oSlug } = tea;\n  const image = getImageSubject(view, 400, tea);\n\n  const isSelected = selectedSlug === oSlug;\n  const onClick = () => setSelectedSlug(oSlug);\n  const classes = `TeaCard ${isSelected ? \"selected\" : \"\"}`;\n\n  return (\n    <figure className={classes} onClick={onClick} id={oSlug}>\n      <div className=\"content\">\n        <div className=\"icon\"></div>\n        <h3 className=\"year glow\">{year}</h3>\n        <h2 className=\"name\">{name}</h2>\n        {image && (\n          <Image\n            src={image.src}\n            alt={image.alt}\n            width={image.width}\n            height={image.height}\n          />\n        )}\n      </div>\n    </figure>\n  );\n};\n","import { useRecoilState } from 'recoil';\nimport { selectedSlugState } from 'states/selectedSlug';\nimport { ArrayProps, EntryProps } from 'types/TeaProduct';\nimport './List.scss';\n\nconst TeaTableRow = ({ tea }: EntryProps) => {\n  const { year, name, style, oSlug } = tea;\n\n  const [selectedSlug, setSelectedSlug] = useRecoilState(selectedSlugState);\n  const onClick = () => setSelectedSlug(oSlug);\n  const isSelected = selectedSlug === oSlug;\n  const classes = `ListText ${isSelected ? 'selected' : ''}`\n\n  return (\n    <tr className={classes} onClick={onClick} id={oSlug}>\n      <td className=\"year\">{year} </td>\n      <td className=\"name\">{name} </td>\n      <td className=\"style\"> {style}</td>\n    </tr>\n  );\n\n};\n\nexport const List = ({ teas }: ArrayProps) => {\n  return (\n    <table className=\"list\">\n      <tbody>\n        {teas.map(t => <TeaTableRow key={t.slug} tea={t} />)}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { selectedSlugState } from \"states/selectedSlug\";\nimport { viewState } from \"states/view\";\nimport { whiteBalancedState } from \"states/whiteBalanced\";\nimport { getImageSubject, TeaProduct } from \"types/TeaProduct\";\nimport \"./Slice.scss\";\n\ninterface TeaSliceProps {\n  tea: TeaProduct;\n}\n\nconst Slice = ({ tea }: TeaSliceProps) => {\n  const view = useRecoilValue(viewState);\n  const whiteBalanced = useRecoilValue(whiteBalancedState);\n  const [selectedSlug, setSelectedSlug] = useRecoilState(selectedSlugState);\n\n  const { year, name, size, oSlug } = tea;\n  const image = getImageSubject(view, 400, tea);\n  if (!image.src) return null;\n\n  const onClick = () => setSelectedSlug(oSlug);\n  const isSelected = selectedSlug === oSlug;\n  const classes = `TeaSliceWrapper ${\n    isSelected ? \"selected\" : \"\"\n  } ${view} ${size}`;\n\n  return (\n    <span className={classes} onClick={onClick} id={oSlug}>\n      {image && (\n        <img\n          src={image.src}\n          alt={image.alt}\n          width={image.width}\n          height={image.height}\n          className=\"TeaSlice\"\n        />\n      )}\n      <div className=\"TeaSliceInfoWrapper\">\n        <div className=\"TeaSliceInfo glow\">\n          <span>{year}</span>\n          <span>{name}</span>\n        </div>\n      </div>\n    </span>\n  );\n};\n\ninterface SlicesProps {\n  teas: TeaProduct[];\n}\n\nconst getDefaultFilters = (view: string) =>\n  ({\n    cake: true,\n    brick: view === \"wrapper\" ? false : true,\n    square: view === \"wrapper\" ? false : true,\n    mini: view === \"wrapper\" ? false : true,\n    ball: view === \"wrapper\" ? false : true,\n    bamboo: view !== \"soup\" ? false : true,\n  } as any);\n\nexport const Slices = ({ teas }: SlicesProps) => {\n  const view = useRecoilValue(viewState);\n  const defaultFilters = getDefaultFilters(view);\n  const [filteredSizes, setFilteredSizes] = useState(defaultFilters);\n  useEffect(() => {\n    setFilteredSizes(getDefaultFilters(view));\n  }, [view]);\n  const TeaSlices = teas\n    .filter((t) => filteredSizes[t.size])\n    .map((t) => <Slice key={t.slug} tea={t} />);\n  const toggle = (size: any) => ({\n    ...filteredSizes,\n    [size]: !filteredSizes[size] as boolean,\n  });\n  const Filters = Object.keys(defaultFilters).map((size) => (\n    <button\n      key={size}\n      className={`button toggle ${filteredSizes[size] ? \"checked\" : \"\"}`}\n      onClick={() => setFilteredSizes(toggle(size))}\n    >\n      {size}\n    </button>\n  ));\n  return (\n    <>\n      <nav className=\"TeaSliceFilters\">{Filters}</nav>\n      <div className=\"TeaSlices\">{TeaSlices}</div>\n    </>\n  );\n};\n","import { useRecoilState } from \"recoil\";\nimport { selectedSlugState } from \"../states/selectedSlug\";\nimport { TeaProduct } from \"../types/TeaProduct\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nexport const getDirection = (\n  direction: string,\n  oSlug: string,\n  teas: TeaProduct[]\n): string => {\n  if (!oSlug) return teas[0].oSlug;\n  const i = teas.findIndex((t) => t.oSlug === oSlug);\n  const col = 3;\n  switch (direction) {\n    case \"left\":\n      return teas[i - 1]?.oSlug || teas[teas.length - 1].oSlug;\n    case \"right\":\n      return teas[i + 1]?.oSlug || teas[0].oSlug;\n    case \"up\":\n      return teas[i - col]?.oSlug || teas[teas.length - 1].oSlug;\n    case \"down\":\n      return teas[i + col]?.oSlug || teas[0].oSlug;\n    default:\n      return oSlug;\n  }\n};\n\nexport function useKeyboardNavigation(teas: TeaProduct[]) {\n  const [selectedSlug, setSelectedSlug] = useRecoilState(selectedSlugState);\n  useHotkeys(\n    \"left\",\n    () => setSelectedSlug(getDirection(\"left\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"right\",\n    () => setSelectedSlug(getDirection(\"right\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"up\",\n    () => setSelectedSlug(getDirection(\"up\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n  useHotkeys(\n    \"down\",\n    () => setSelectedSlug(getDirection(\"down\", selectedSlug, teas)),\n    [selectedSlug, teas]\n  );\n}\n","import { atom } from \"recoil\";\n\nexport type Layout = \"card\" | \"list\" | \"slice\";\n\nexport const layouts: Layout[] = [\"card\", \"slice\", \"list\"];\n\nexport const layoutState = atom({\n  key: \"layout\",\n  default: \"card\" as Layout,\n});\n","import { atom } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nexport type Sorting = \"-year\" | \"+year\" | \"+name\" | \"-name\" | \"+cost\" | \"-cost\";\nexport const sortings: Sorting[] = [\n  \"-year\",\n  \"+year\",\n  \"+name\",\n  \"-name\",\n  \"-cost\",\n  \"+cost\",\n];\n\nexport const sortingState = atom({\n  key: \"sorting\",\n  default: \"-year\" as Sorting,\n});\n\nconst getName = (x: TeaProduct) => x.name.replace(\"The \", \"\");\n\nconst nameDesc = (a: TeaProduct, b: TeaProduct) =>\n  getName(b).localeCompare(getName(a)) || b.year - a.year;\nconst nameAsc = (a: TeaProduct, b: TeaProduct) =>\n  getName(a).localeCompare(getName(b)) || a.year - b.year;\n\nconst yearDesc = (a: TeaProduct, b: TeaProduct) =>\n  b.year - a.year || nameAsc(a, b);\nconst yearAsc = (a: TeaProduct, b: TeaProduct) =>\n  a.year - b.year || nameAsc(a, b);\n\nconst maxDPG = (x: TeaProduct): number =>\n  Math.max(...x.forms.map((x) => x.dpg));\n\nconst costDesc = (a: TeaProduct, b: TeaProduct) =>\n  maxDPG(b) - maxDPG(a) || nameAsc(a, b);\nconst costAsc = (a: TeaProduct, b: TeaProduct) =>\n  maxDPG(a) - maxDPG(b) || nameAsc(a, b);\n\ntype SortingFunctionMap = {\n  [key in Sorting]: (a: TeaProduct, b: TeaProduct) => number;\n};\n\nexport const sortingFunctions: SortingFunctionMap = {\n  \"-year\": yearDesc,\n  \"+year\": yearAsc,\n  \"+name\": nameAsc,\n  \"-name\": nameDesc,\n  \"-cost\": costDesc,\n  \"+cost\": costAsc,\n};\n","import { atom } from \"recoil\";\nimport { TeaProduct, TeaStyle } from \"types/TeaProduct\";\n\nexport type TeaStyleFiltering = \"all\" | TeaStyle;\n\nexport const teaStyleFilteringState = atom({\n  key: \"teaStyleFilter\",\n  default: \"all\" as TeaStyleFiltering,\n});\n\nconst isStyle = (s: TeaStyleFiltering) => (x: TeaProduct) => x.style === s;\nconst identity = (x: TeaProduct) => true;\n\ntype TeaStyleFilteringMap = {\n  // TODO make non-optional\n  [key in TeaStyleFiltering]?: (a: TeaProduct) => boolean;\n};\n\nexport const filteringFunctions: TeaStyleFilteringMap = {\n  all: identity,\n  raw: isStyle(\"raw\"),\n  ripe: isStyle(\"ripe\"),\n  white: isStyle(\"white\"),\n  black: isStyle(\"black\"),\n  oolong: isStyle(\"oolong\"),\n  // TODO add data, then re-enable\n  // 'green': isStyle(TeaStyle.Green),\n  // 'unknown': isStyle(TeaStyle.Unknown),\n};\n","import { atom, selector } from \"recoil\";\nimport { TeaProduct } from \"types/TeaProduct\";\n\nimport teaProducts from \"teaProducts.json\";\nimport {\n  filteringFunctions,\n  teaStyleFilteringState,\n} from \"./teaStyleFiltering\";\nimport { sortingFunctions, sortingState } from \"./sorting\";\n// const stored = JSON.parse(localStorage.getItem(\"subjects\") || \"\");\n\nexport const allTeasState = atom({\n  key: \"allTeas\",\n  default: teaProducts as TeaProduct[],\n});\n\nexport const teasState = selector({\n  key: \"teas\",\n  get: ({ get }) => {\n    const all = get(allTeasState);\n    const filtering = get(teaStyleFilteringState);\n    const sorting = get(sortingState);\n\n    return (\n      all\n        // @ts-expect-error: dynamic\n        .filter(filteringFunctions[filtering])\n        .sort(sortingFunctions[sorting])\n    );\n  },\n});\n","export const scrollToId = (id: string, delay = 100) => setTimeout(() => document.getElementById(id)?.scrollIntoView({ behavior: \"smooth\", block: \"center\" }), delay);\n","import { Cards } from \"components/TeaProduct/Card\";\nimport { List } from \"components/TeaProduct/List\";\nimport { Slices } from \"components/TeaProduct/Slice\";\nimport { useKeyboardNavigation } from \"hooks/useKeyboardNavigation\";\nimport { useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { layoutState } from \"states/layout\";\nimport { selectedSlugState } from \"states/selectedSlug\";\nimport { sortingState } from \"states/sorting\";\nimport { teasState } from \"states/teas\";\nimport { teaStyleFilteringState } from \"states/teaStyleFiltering\";\nimport { TeaProduct } from \"types/TeaProduct\";\nimport { scrollToId } from \"utils/scrollTo\";\n\nconst LayoutView = ({ teas }: { teas: TeaProduct[] }) => {\n  const layout = useRecoilValue(layoutState);\n  switch (layout) {\n    case \"list\": {\n      return <List teas={teas} />;\n    }\n    case \"slice\": {\n      return <Slices teas={teas} />;\n    }\n    default:\n    case \"card\": {\n      return <Cards teas={teas} />;\n    }\n  }\n};\n\nexport const Main = () => {\n  const sorting = useRecoilValue(sortingState);\n  const filtering = useRecoilValue(teaStyleFilteringState);\n  const layout = useRecoilValue(layoutState);\n  const selectedSlug = useRecoilValue(selectedSlugState);\n  const teas = useRecoilValue(teasState);\n\n  useEffect(() => {\n    scrollToId(selectedSlug, 200);\n  }, [sorting, filtering, layout, selectedSlug]);\n\n  useKeyboardNavigation(teas);\n\n  return (\n    <main className={selectedSlug ? \"detail--open\" : \"\"}>\n      <LayoutView teas={teas} />\n    </main>\n  );\n};\n","export const capitalize = (str: string) => str[0].toUpperCase() + str.slice(1).toLowerCase();","import { useRecoilState } from \"recoil\";\nimport { Layout, layoutState, layouts } from \"states/layout\";\nimport { capitalize } from \"utils/capitalize\";\n\nexport const Selector = ({ layout }: { layout: Layout }) => {\n  const [currentLayout, setLayout] = useRecoilState(layoutState);\n  return (\n    <button\n      className=\"button radio button--layout\"\n      disabled={currentLayout === layout}\n      onClick={() => setLayout(layout)}\n    >\n      {capitalize(layout)}\n    </button>\n  );\n};\n\nexport const LayoutSelector = () => (\n  <>\n    {layouts.map((l) => (\n      <Selector key={l} layout={l} />\n    ))}\n  </>\n);\n","import { useRecoilState } from \"recoil\";\nimport {\n  filteringFunctions,\n  TeaStyleFiltering,\n  teaStyleFilteringState,\n} from \"states/teaStyleFiltering\";\n\nexport const Button = ({ filtering }: { filtering: TeaStyleFiltering }) => {\n  const [currentFitlering, set] = useRecoilState(teaStyleFilteringState);\n  return (\n    <button\n      className=\"button radio button--filter\"\n      disabled={filtering === currentFitlering}\n      onClick={() => set(filtering)}\n    >\n      {filtering}\n    </button>\n  );\n};\n\nexport const FilteringSelector = () => {\n  const $Buttons = Object.keys(filteringFunctions).map((key) => (\n    <Button filtering={key as TeaStyleFiltering} key={key} />\n  ));\n  return <>{$Buttons}</>;\n};\n","import { useRecoilState } from \"recoil\";\nimport { Sorting, sortings, sortingState } from \"states/sorting\";\n\nconst getIcon = (value: string) => {\n  switch (value[0]) {\n    case \"+\": {\n      // return '⬈';\n      return \"+\";\n    }\n    case \"-\": {\n      // return '⬊';\n      return \"-\";\n    }\n    default: {\n      return \"?\";\n    }\n  }\n};\n\nconst Label = ({ value }: any) => {\n  const icon = getIcon(value);\n  return (\n    <span className=\"label\">\n      <span className=\"text\">{value.slice(1)}</span>\n      &nbsp;\n      <span className=\"icon--plain\">{icon}</span>\n    </span>\n  );\n};\n\nexport const Button = ({ sorting }: { sorting: Sorting }) => {\n  const [currentSorting, setSorting] = useRecoilState(sortingState);\n  return (\n    <button\n      className=\"button radio button--sort\"\n      disabled={sorting === currentSorting}\n      onClick={() => setSorting(sorting)}\n    >\n      <Label value={sorting} />\n    </button>\n  );\n};\n\nexport const SortingSelector = (props: any) => {\n  const $Buttons = sortings.map((s) => <Button sorting={s} key={s} />);\n  return <>{$Buttons}</>;\n};\n","import { Dispatch, SetStateAction } from \"react\";\n\ninterface ToggleProps {\n  value: boolean;\n  set: Dispatch<SetStateAction<boolean>>;\n  label: string;\n  classes?: string;\n}\n\nexport const Toggle = ({ value, label, set, classes = '' }: ToggleProps) => (\n  <button\n    className={`button toggle ${value ? 'checked' : ''} ${classes}`}\n    onClick={() => set(!value)}\n  >\n    {label}\n  </button>\n);\n","import { useRecoilState } from \"recoil\";\nimport { View, viewState } from \"states/view\";\nimport { whiteBalancedState } from \"states/whiteBalanced\";\nimport { capitalize } from \"utils/capitalize\";\nimport { Toggle } from \"../Toggle\";\nimport \"./View.scss\";\n\nconst WhiteBalance = () => {\n  const [isWhiteBalanced, setIsWhiteBalanced] =\n    useRecoilState(whiteBalancedState);\n  return (\n    <Toggle\n      value={isWhiteBalanced}\n      set={setIsWhiteBalanced}\n      label=\"wb\"\n      classes=\"WhiteBalance\"\n    />\n  );\n};\n\nconst label = (view: View) => capitalize(view[0]);\n\nconst Button = ({ view }: { view: View }) => {\n  const [currentView, setView] = useRecoilState(viewState);\n  return (\n    <button\n      className={`button radio button--view`}\n      onClick={() => setView(view)}\n      disabled={currentView === view}\n    >\n      {label(view)}\n    </button>\n  );\n};\n\nexport const ViewSelector = () => {\n  const [currentView] = useRecoilState(viewState);\n  return (\n    <nav className={`view-selector global`}>\n      <Button view=\"wrapper-top\" />\n      <Button view=\"tea-top\" />\n      <div className={`view--white-balanced ${currentView}`}>\n        <WhiteBalance />\n        <Button view=\"soup\" />\n      </div>\n    </nav>\n  );\n};\n","export const Divider = () => (\n  <>\n    <br />\n    <br />\n  </>\n);\n","export const Heading = ({ children }: any) => (\n  <h1 className=\"heading\" onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>{children}</h1>\n);\n","import { LayoutSelector } from \"components/Selectors/Layout\";\nimport { FilteringSelector } from \"components/Selectors/Filtering\";\nimport { SortingSelector } from \"components/Selectors/Sorting\";\nimport { ViewSelector } from \"components/Selectors/View\";\nimport { Divider } from \"components/Divider\";\nimport { Heading } from \"components/Heading\";\n\nexport const Nav = () => (\n  <aside className=\"controls--global\">\n    <Heading>w2tv</Heading>\n    <ViewSelector />\n    <LayoutSelector />\n    <Divider />\n    <SortingSelector />\n    <Divider />\n    <FilteringSelector />\n    <Divider />\n  </aside>\n);\n","import { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { OfferOembed, TeaOembed } from \"types/Oembed\";\nimport { selectedSlugState } from \"states/selectedSlug\";\n\nimport \"./Detail.scss\";\nimport { scrollToId } from \"utils/scrollTo\";\n\nconst WIDTH = 800;\nconst HEIGHT = 800;\n// const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const useDetail = (slug: string): [TeaOembed | null, string] => {\n  const [status, setStatus] = useState(\"start\");\n  const [detail, setDetail] = useState<TeaOembed | null>(null);\n  useEffect(() => {\n    const get = async () => {\n      try {\n        const s = reslug(slug);\n        const url = `/w2tv/products/${s}.oembed`;\n        setStatus(\"loading\");\n        const res = await fetch(url);\n        const oembed: TeaOembed = await res.json();\n        // await delay(4000);\n        setDetail(oembed);\n        setStatus(\"resolved\");\n      } catch (e) {\n        setDetail(null);\n        setStatus(\"error\");\n      }\n    };\n    get();\n  }, [slug]);\n  return [detail, status];\n};\nconst sunday = {\n  product_id: \"2020-saturday-mass\",\n  title: \"2020 Saturday Mass\",\n  description:\n    '<p data-mce-fragment=\"1\">Our Saturday Mass is a blend of our <a title=\"small batch shu Puer tea from white2tea\" href=\"https://white2tea.com/blogs/blog/what-is-small-batch-shou-puerh-tea\" target=\"_blank\">small batch shu Puer</a> and chenpi (Mandarin orange skin). <br><br>This blend focuses on the thicker, heavy aspects of shu Puer and an aged orange skin that offers a darker medicinal citrus aroma. The tea has a thick texture with a smooth, heavy body and dark flavor profile. Perfect tea for cold or wet weather. Drink now or age as you please.</p>\\n<p data-mce-fragment=\"1\">Each cake is 200 grams of tea.<br></p>',\n  brand: \"white2tea\",\n  offers: [\n    {\n      title: \"200g\",\n      offer_id: 37078002467007,\n      sku: \"12008A\",\n      price: 66,\n      currency_code: \"USD\",\n      in_stock: true,\n    },\n    {\n      title: \"25g\",\n      offer_id: 37078002499775,\n      sku: \"12008B\",\n      price: 9.9,\n      currency_code: \"USD\",\n      in_stock: true,\n    },\n  ],\n  thumbnail_url: \"\",\n  url: \"https://white2tea.com/products/2020-saturday-mass\",\n  provider: \"white2tea\",\n  version: \"1.0\",\n  type: \"link\",\n};\n\nexport const Start = () => {\n  return <h1>start</h1>;\n};\n\nexport const Loading = () => {\n  return <h1>loading...</h1>;\n};\n\nexport const Error = ({ slug }: any) => {\n  return (\n    <>\n      <h1>error</h1>\n      <h1>{slug}</h1>\n      <h1>{reslug(slug)}</h1>\n    </>\n  );\n};\n\ntype OfferProps = {\n  offer: OfferOembed;\n};\n\nexport const Offer = ({ offer }: OfferProps) => {\n  const { title, price, in_stock } = offer;\n  let mass = parseInt(title.replace(/\\D/g, \"\"), 10);\n  if (mass === 1) mass = 1000;\n  const tilde = title.startsWith(\"~\") ? \"~\" : \"\";\n\n  const style = {\n    textDecoration: in_stock ? \"none\" : \"line-through\",\n    color: in_stock ? \"inherit\" : \"var(--grey-medium)\",\n  };\n\n  const nan = Number.isNaN(mass);\n  const $size = nan ? \"?\" : `${tilde} ${mass}`;\n  const $price = price.toFixed(2);\n  const $ppg = nan ? \"?\" : (price / mass).toFixed(2);\n\n  return (\n    <div style={style} className=\"Offer table\">\n      <h2>{$size}g</h2>\n      <h3>${$price}</h3>\n      <h4>${$ppg}</h4>\n    </div>\n  );\n};\n\ntype DetailProps = {\n  detail: TeaOembed;\n};\n\nconst OfferHeading = () => (\n  <div className=\"OfferHeading table\">\n    <span>Size</span>\n    <span>Price</span>\n    <span>$ / g</span>\n  </div>\n);\n\nexport const DetailContent = ({ detail }: DetailProps) => {\n  const { title, description, thumbnail_url, offers, url } = detail;\n  const titleRegExp = new RegExp(title, \"g\");\n  const glowTitle = `<span class=\"glow\">${title}</span>`;\n  const descriptionGlow = description\n    .replace(/style=\"(.*?)\"/g, \"\")\n    .replace(titleRegExp, glowTitle);\n  const image = thumbnail_url ? (\n    <img\n      className=\"thumbnail responsive\"\n      src={thumbnail_url}\n      alt={title}\n      width={WIDTH}\n      height={HEIGHT}\n    />\n  ) : (\n    <div className=\"placeholder\">\n      <div className=\"circle\"></div>\n    </div>\n  );\n\n  return (\n    <article className=\"TeaDetail\">\n      <h1 className=\"title glow\">{title}</h1>\n      {image}\n      <OfferHeading />\n      {offers.map((o) => (\n        <Offer key={o.sku} offer={o} />\n      ))}\n      <div\n        className=\"description\"\n        dangerouslySetInnerHTML={{ __html: descriptionGlow }}\n      />\n      <a className=\"DetailButton Link\" href={url}>\n        <span className=\"value\">🔗</span>\n      </a>\n    </article>\n  );\n};\n\nexport const Skeleton = () => {\n  return (\n    <div className=\"skeleton\">\n      <DetailContent detail={sunday} />\n    </div>\n  );\n};\n\nexport const TeaDetail = ({ slug }: any) => {\n  const [detail, status] = useDetail(slug);\n\n  switch (status) {\n    case \"start\":\n      return <Skeleton />;\n    case \"loading\":\n      return <Skeleton />;\n    // case 'resolved': return <Skeleton />;\n    case \"resolved\":\n      return <DetailContent detail={detail as TeaOembed} />;\n    default:\n      return <Error slug={slug} />;\n  }\n};\nexport const Detail = () => {\n  const [selectedSlug, setSelectedSlug] = useRecoilState(selectedSlugState);\n  const classes = `drawer ${selectedSlug ? \"open\" : \"closed\"}`;\n\n  const resetSelected = () => {\n    scrollToId(selectedSlug);\n    setSelectedSlug(\"\");\n  };\n\n  return (\n    <aside className={classes}>\n      <button className=\"DetailButton Close\" onClick={resetSelected}>\n        <span className=\"value\">&times;</span>\n      </button>\n      {selectedSlug && <TeaDetail slug={selectedSlug} />}\n    </aside>\n  );\n};\n\nfunction reslug(slug: string) {\n  return slug;\n}\n","import { Main } from \"components/Main\";\nimport { Nav } from \"components/Nav\";\nimport { Detail } from \"components/TeaProduct/Detail\";\nimport { useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { layoutState } from \"states/layout\";\nimport { sortingState } from \"states/sorting\";\nimport { teaStyleFilteringState } from \"states/teaStyleFiltering\";\nimport { viewState } from \"states/view\";\nimport { whiteBalancedState } from \"states/whiteBalanced\";\nimport \"./App.scss\";\n\nconsole.log(`msg: ${process.env.REACT_APP_GIT_MSG}`);\n\nfunction App() {\n  // const localStoreState = localStorage.getItem(\"state\");\n  // const state: AppState = localStoreState\n  //   ? JSON.parse(localStoreState)\n  //   : stateDefaults;\n  const sorting = useRecoilValue(sortingState);\n  const filtering = useRecoilValue(teaStyleFilteringState);\n  const layout = useRecoilValue(layoutState);\n  const viewGlobal = useRecoilValue(viewState);\n  const whiteBalanced = useRecoilValue(whiteBalancedState);\n\n  useEffect(() => {\n    const state = {\n      viewGlobal,\n      sorting,\n      filtering,\n      layout,\n      whiteBalanced,\n    };\n    const json = JSON.stringify(state);\n    localStorage.setItem(\"state\", json);\n  }, [viewGlobal, sorting, filtering, layout, whiteBalanced]);\n\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Main />\n      <Detail />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./utils/reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.debug);\n"],"sourceRoot":""}